@charset "UTF-8";
/* utils */
*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body, html {
  position: relative;
  scroll-behavior: smooth;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

img {
  display: block;
  max-width: 100%;
  max-height: 100%;
  -o-object-fit: scale-down;
  object-fit: scale-down;
}

button {
  background-color: transparent;
  outline: none;
  border: none;
}

ul,
ol {
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  padding-left: var(--list-padding-left);
}

input,
button,
textarea,
select {
  font: inherit;
  border: none;
  outline: none;
  cursor: pointer;
}

a {
  text-decoration: none;
  color: inherit;
  font-size: inherit;
  font-weight: inherit;
  font-style: inherit;
}

svg, button {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  outline: none;
}

:root {
  --rethink: "Rethink Sans", sans-serif;
  --archivo:"Archivo", sans-serif;
  --roboto: "Roboto Mono", monospace ;
  --list-padding-left: 20px;
  --active: #55C0D2;
}

body {
  font-family: "Rethink Sans", sans-serif;
}

.simplebar-track.simplebar-vertical {
  width: 11px;
  height: calc(100% - 21px - 21px);
  top: 21px;
}
.simplebar-track.simplebar-vertical .simplebar-scrollbar {
  width: 6px;
}
.simplebar-track.simplebar-vertical .simplebar-scrollbar::before {
  opacity: 1;
  inset: 0;
  background-color: rgba(9, 19, 21, 0.08);
}

* {
  -ms-scroll-chaining: none;
  overscroll-behavior: contain;
}

.none {
  display: none !important;
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

.no-scroll, .no-scrollbar {
  overflow-y: hidden;
}

.icon, svg, button, a {
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}

html, body {
  min-height: 100dvh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

.footer {
  margin-top: auto;
}

/* Components */
.atom-title {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 12px;
}
@media screen and (max-width: 1632px) {
  .atom-title {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
.atom-title h2 {
  color: var(--dark-100, #091315);
  /* H2 */
  font-family: var(--archivo);
  font-size: 40px;
  font-style: normal;
  font-weight: 500;
  line-height: 44px;
  /* 110% */
}
@media screen and (max-width: 768px) {
  .atom-title h2 {
    font-size: 36px;
    font-style: normal;
    font-weight: 500;
    line-height: 40px;
  }
}

.custom-pagination {
  margin-top: 32px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 29px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: none;
}
@media screen and (max-width: 768px) {
  .custom-pagination {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
}
.custom-pagination button {
  width: 24px;
  height: 24px;
  color: #091315;
}
.custom-pagination button.swiper-button-disabled {
  opacity: 0.3;
}
@media (hover: hover) {
  .custom-pagination button.swiper-button-disabled:hover {
    cursor: pointer;
    color: #091315;
  }
}
.custom-pagination button.swiper-button-disabled:focus-visible {
  color: #091315;
}
@media (hover: hover) {
  .custom-pagination button:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.custom-pagination button:focus-visible {
  color: var(--active);
}
.custom-pagination .pagination {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 8px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.custom-pagination .pagination .swiper-pagination-bullet {
  border-radius: 2px;
  width: 100%;
  height: 2px;
  background-color: rgba(9, 19, 21, 0.0784313725);
  opacity: 1;
  position: relative;
}
.custom-pagination .pagination .swiper-pagination-bullet:after {
  content: "";
  position: absolute;
  width: 0;
  height: 100%;
  border-radius: inherit;
  background: #091315;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  left: 100%;
}
.custom-pagination .pagination .swiper-pagination-bullet-active:after {
  left: 0;
  -webkit-transition: 0s;
  transition: 0s;
  width: var(--width);
}

.description {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
  padding: 3px 0;
}
.description .title {
  color: var(--dark-100, #091315);
  /* Body/Tech CAPS */
  font-family: var(--roboto);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px;
  /* 133.333% */
  letter-spacing: 0.12px;
  text-transform: uppercase;
}

.download-with-arrow {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  /* 162.5% */
  letter-spacing: 0.16px;
  padding: 16px 32.5px;
  border-radius: 2px;
  background-color: var(--blue-green-200100, #99D9E4);
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}
.download-with-arrow .icon {
  position: absolute;
  top: 8px;
  right: 8px;
  width: 12px;
  height: 12px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.download-with-arrow .icon svg {
  width: 100%;
  height: 100%;
}
.download-with-arrow .text {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  color: var(--dark-100, #091315);
  /* Body/Body M – Meduim */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
}
@media (hover: hover) {
  .download-with-arrow:hover {
    cursor: pointer;
    background-color: var(--active);
  }
  .download-with-arrow:hover .icon {
    -webkit-transform: translate(4px, -4px);
    -ms-transform: translate(4px, -4px);
    transform: translate(4px, -4px);
  }
}
.download-with-arrow:focus-visible {
  background-color: var(--active);
}
.download-with-arrow:focus-visible .icon {
  -webkit-transform: translate(4px, -4px);
  -ms-transform: translate(4px, -4px);
  transform: translate(4px, -4px);
}

.line-atom {
  max-width: 1680px;
  width: 100%;
  height: 1px;
  background: var(--dark-8, rgba(9, 19, 21, 0.08));
  margin: 100px auto;
}
@media screen and (max-width: 768px) {
  .line-atom {
    margin: 80px auto;
  }
}
@media screen and (max-width: 768px) {
  .line-atom.mobile-not {
    display: none;
  }
}
.line-atom.desktop-not {
  display: none;
}
@media screen and (max-width: 768px) {
  .line-atom.desktop-not {
    display: block;
  }
}

.post-atom {
  --gap: 24px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  display: flex;
  flex-direction: column;
  gap: var(--gap);
}
@media screen and (max-width: 768px) {
  .post-atom {
    --gap: 16px;
  }
}
@media (hover: hover) {
  .post-atom:hover {
    cursor: pointer;
  }
  .post-atom:hover .img-container img {
    scale: 1.1;
  }
  .post-atom:hover h4 {
    color: var(--active);
  }
}
.post-atom:focus-visible .img-container img {
  scale: 1.1;
}
.post-atom:focus-visible h4 {
  color: var(--active);
}
.post-atom .img-container {
  width: 100%;
  position: relative;
  aspect-ratio: 523/280;
  overflow: hidden;
}
.post-atom .img-container .img {
  position: absolute;
  width: 100%;
  height: 100%;
}
.post-atom .img-container .img img {
  position: absolute;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  -webkit-transition: 0.6s ease-out all;
  transition: 0.6s ease-out all;
}
.post-atom .img-container .tag {
  padding: 8px 8.5px;
  color: var(--White, #FFF);
  /* Body/Tech CAPS */
  font-family: var(--roboto);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px;
  /* 133.333% */
  letter-spacing: 0.12px;
  text-transform: uppercase;
  z-index: 2;
  position: absolute;
  bottom: 16px;
  left: 16px;
  border-radius: 2px;
  background: var(--dark-32, rgba(9, 19, 21, 0.32));
  -webkit-backdrop-filter: blur(16px);
  backdrop-filter: blur(16px);
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
@media (hover: hover) {
  .post-atom .img-container .tag:hover {
    cursor: pointer;
    background-color: var(--active);
  }
}
.post-atom .img-container .tag:focus-visible {
  background-color: var(--active);
}
.post-atom .information {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: var(--gap);
}
.post-atom h4 {
  max-width: 353px;
  color: var(--dark-100, #091315);
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  /* H4 */
  font-family: var(--rethink);
  font-size: 20px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  /* 130% */
  letter-spacing: -0.1px;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 5;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
.post-atom .date {
  margin-top: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 12px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.post-atom .date .info,
.post-atom .date .read {
  color: var(--dark-52, rgba(9, 19, 21, 0.52));
  /* Body/Tech CAPS */
  font-family: var(--roboto);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px;
  /* 133.333% */
  letter-spacing: 0.12px;
  text-transform: uppercase;
}
.post-atom .date .separator {
  background: rgba(9, 19, 21, 0.52);
  width: 1px;
  height: 8px;
}

.project-card {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.project-card a {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  border-radius: 2px;
  overflow: hidden;
  width: 100%;
  background-color: var(--bg);
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
@media (hover: hover) {
  .project-card a:hover {
    cursor: pointer;
  }
  .project-card a:hover .img-container img {
    scale: 1.1;
  }
  .project-card a:hover .content svg {
    -webkit-transform: translateX(8px);
    -ms-transform: translateX(8px);
    transform: translateX(8px);
    color: var(--active);
  }
}
@media screen and (hover: hover) and (max-width: 768px) {
  .project-card a:hover .content svg {
    -webkit-transform: translateX(4px);
    -ms-transform: translateX(4px);
    transform: translateX(4px);
  }
}
.project-card a:focus-visible .img-container img {
  scale: 1.1;
}
.project-card a:focus-visible .content svg {
  -webkit-transform: translateX(8px);
  -ms-transform: translateX(8px);
  transform: translateX(8px);
  color: var(--active);
}
@media screen and (max-width: 768px) {
  .project-card a:focus-visible .content svg {
    -webkit-transform: translateX(4px);
    -ms-transform: translateX(4px);
    transform: translateX(4px);
  }
}
.project-card a .img-container {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 420px;
  width: 100%;
  overflow: hidden;
}
.project-card a .img-container .absolut-container {
  position: absolute;
  z-index: 3;
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 24px;
  gap: 16px;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: end;
}
@media screen and (max-width: 768px) {
  .project-card a .img-container .absolut-container {
    padding: 16pxs;
  }
}
.project-card a .img-container .absolut-container .tag {
  border-radius: 2px;
  background-color: var(--tag-bg);
  padding: 8px;
  color: var(--dark-100, #091315);
  /* Body/Tech CAPS */
  font-family: var(--roboto);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px;
  /* 133.333% */
  letter-spacing: 0.12px;
  text-transform: uppercase;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}
.project-card a .img-container .absolut-container h1 {
  color: var(--White, #FFF);
  /* H Large */
  font-family: var(--archivo);
  font-size: 64px;
  font-style: normal;
  font-weight: 600;
  line-height: 64px;
  /* 100% */
  letter-spacing: -1.28px;
}
@media screen and (max-width: 768px) {
  .project-card a .img-container .absolut-container h1 {
    font-size: 40px;
    font-style: normal;
    font-weight: 600;
    line-height: 44px;
  }
}
.project-card a .img-container .toner {
  bottom: 0;
  position: absolute;
  z-index: 2;
  width: 100%;
  height: calc(50% + 36px);
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0.52)), color-stop(91.78%, rgba(0, 0, 0, 0)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0.52) 0%, rgba(0, 0, 0, 0) 91.78%);
}
.project-card a .img-container img {
  position: absolute;
  z-index: 1;
  width: 100%;
  -webkit-transition: 0.8s ease-out all;
  transition: 0.8s ease-out all;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}
.project-card a .content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 16px;
  padding: 24px;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 110px;
}
@media screen and (max-width: 768px) {
  .project-card a .content {
    margin-bottom: 60px;
    padding: 16px;
  }
}
.project-card a .content p {
  max-width: 524px;
  min-height: 104px;
  color: var(--dark-100, #091315);
  font-family: var(--rethink);
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
  display: -webkit-box;
  -webkit-line-clamp: 4;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
@media screen and (max-width: 768px) {
  .project-card a .content p {
    min-height: 0px;
  }
}
.project-card a .content svg {
  color: #091315;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.big-text {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  margin-top: 100px;
}
@media screen and (max-width: 1640px) {
  .big-text {
    width: calc(100% - 20px - 20px);
    margin-inline: 20px;
  }
}
@media screen and (max-width: 768px) {
  .big-text {
    margin-top: 32px;
  }
}
.big-text h2 {
  color: var(--dark-100, #091315);
  /* H2 */
  font-family: var(--archivo);
  font-size: 40px;
  font-style: normal;
  font-weight: 500;
  line-height: 44px;
  /* 110% */
}
@media screen and (max-width: 768px) {
  .big-text h2 {
    font-size: 24px;
    font-style: normal;
    font-weight: 500;
    line-height: 32px;
    /* 133.333% */
    letter-spacing: -0.12px;
  }
}

.map-container-atom {
  max-width: 1600px;
  width: 100%;
  height: auto;
  aspect-ratio: 1600/865;
  margin-inline: auto;
}
.map-container-atom .map-zoom-fullscreen {
  display: none;
}
.map-container-atom.general-info {
  max-height: calc(100dvh - 86px - 91px - 200px);
}
@media screen and (max-width: 768px) {
  .map-container-atom.general-info {
    height: calc(80dvh - 90px - 58px);
  }
}

.page-navigation {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  max-width: 1680px;
  width: 100%;
  margin-inline: auto;
  background: var(--blue-green-100100, #DDF2F6);
  padding-top: 31px;
  padding-bottom: 32px;
  border-radius: 0 0 2px 2px;
  position: relative;
  border-top: 1px solid rgba(9, 19, 21, 0.08);
  z-index: 800;
}
@media screen and (max-width: 1680px) {
  .page-navigation {
    border-radius: 0;
  }
}
@media screen and (max-width: 768px) {
  .page-navigation {
    display: none;
  }
}
.page-navigation__container {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 32px;
  overflow: auto;
  scrollbar-width: none;
  -ms-overflow-style: none;
}
@media screen and (max-width: 1640px) {
  .page-navigation__container {
    width: calc(100% - 20px - 20px);
    margin-inline: 20px;
  }
}
.page-navigation__container::-webkit-scrollbar {
  /* WebKit */
  width: 0;
  height: 0;
}
@media screen and (max-width: 1640px) {
  .page-navigation__container {
    width: 100%;
    margin-inline: auto;
    max-width: none;
    padding-inline: 20px;
  }
}
.page-navigation__container a {
  color: var(--dark-100, #091315);
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  /* 162.5% */
  letter-spacing: 0.16px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}
@media (hover: hover) {
  .page-navigation__container a:hover {
    cursor: pointer;
    text-decoration: underline;
  }
}
.page-navigation__container a:focus-visible {
  text-decoration: underline;
}

.page-title {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  max-width: 1680px;
  width: 100%;
  margin-inline: auto;
  background: var(--blue-green-100100, #DDF2F6);
  padding-top: 24px;
  padding-bottom: 32px;
  border-radius: 2px 2px 0 0;
}
@media screen and (max-width: 1680px) {
  .page-title {
    border-radius: 0;
    padding: 16px 0;
  }
}
.page-title.full {
  border-radius: 2px;
  min-height: 400px;
}
@media screen and (max-width: 1680px) {
  .page-title.full {
    border-radius: 0;
  }
}
@media screen and (max-width: 768px) {
  .page-title.full {
    min-height: 0px;
  }
}
.page-title.full .heading {
  margin-top: auto;
}
.page-title.active .heading svg {
  rotate: 180deg;
}
.page-title__breadcrumps {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 16px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
@media screen and (max-width: 1640px) {
  .page-title__breadcrumps {
    width: calc(100% - 20px - 20px);
    margin-inline: 20px;
  }
}
@media screen and (max-width: 768px) {
  .page-title__breadcrumps {
    display: none;
  }
}
.page-title__breadcrumps a {
  color: rgba(9, 19, 21, 0.322);
  font-family: var(--rethink);
  font-size: 14px;
  font-style: normal;
  font-weight: 400;
  line-height: 22px;
  /* 157.143% */
  letter-spacing: 0.14px;
}
@media (hover: hover) {
  .page-title__breadcrumps a:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.page-title__breadcrumps a:focus-visible {
  color: var(--active);
}
.page-title__breadcrumps a:has(svg) {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
@media (hover: hover) {
  .page-title__breadcrumps a:has(svg):hover {
    cursor: pointer;
    color: var(--active);
  }
}
.page-title__breadcrumps a:has(svg):focus-visible {
  color: var(--active);
}
.page-title__breadcrumps a:has(svg) svg {
  color: inherit;
  width: 18px;
  aspect-ratio: 1/1;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.page-title__breadcrumps .separator {
  width: 1px;
  height: 8px;
  background: var(--dark-32, rgba(9, 19, 21, 0.32));
}
.page-title .heading {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  margin-top: 82px;
}
@media screen and (max-width: 1640px) {
  .page-title .heading {
    width: calc(100% - 20px - 20px);
    margin-inline: 20px;
  }
}
@media screen and (max-width: 768px) {
  .page-title .heading {
    margin-top: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    gap: 10px;
  }
}
.page-title .heading h1 {
  color: var(--dark-100, #091315);
  /* H Large */
  font-family: var(--archivo);
  font-size: 64px;
  font-style: normal;
  font-weight: 600;
  line-height: 64px;
  /* 100% */
  letter-spacing: -1.28px;
}
@media screen and (max-width: 768px) {
  .page-title .heading h1 {
    font-family: "Rethink Sans";
    font-size: 20px;
    font-style: normal;
    font-weight: 500;
    line-height: 26px;
    /* 130% */
    letter-spacing: -0.1px;
  }
}
.page-title .heading svg {
  display: none;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
}
@media screen and (max-width: 768px) {
  .page-title .heading svg {
    width: 18px;
    height: 18px;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    display: block;
  }
}
.page-title .links__mobile__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  position: absolute;
  height: 100dvh;
  overflow: auto;
  scrollbar-width: none;
  -ms-overflow-style: none;
  width: 100%;
  top: 100%;
  z-index: 1000;
  background: var(--dark-32, rgba(9, 19, 21, 0.32));
  -webkit-backdrop-filter: blur(16px);
  backdrop-filter: blur(16px);
}
.page-title .links__mobile__container::-webkit-scrollbar {
  /* WebKit */
  width: 0;
  height: 0;
}
.page-title .links__mobile__container__dropdown__content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 8px;
  padding: 0 20px 16px;
  background: var(--blue-green-100100, #DDF2F6);
}
.page-title .links__mobile__container__dropdown__content a {
  color: var(--dark-100, #091315);
  /* Body/Body M – Meduim */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  /* 162.5% */
  letter-spacing: 0.16px;
}

.complex__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  position: relative;
  z-index: 10;
}
.complex__container:not(:has(.page-navigation)) .page-title {
  min-height: 314px;
}
@media screen and (max-width: 768px) {
  .complex__container:not(:has(.page-navigation)) .page-title {
    min-height: unset;
  }
}
.complex__container:not(:has(.page-navigation)) .heading {
  margin-top: auto;
}

.about-with-map {
  margin-top: 40px;
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
@media screen and (max-width: 1632px) {
  .about-with-map {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
.about-with-map__grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
}
@media screen and (max-width: 768px) {
  .about-with-map__grid {
    grid-template-columns: 1fr;
    gap: 0;
  }
}
.about-with-map__grid .col {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
}
@media screen and (max-width: 768px) {
  .about-with-map__grid .col {
    gap: 32px;
  }
}
.about-with-map__grid .col .description {
  margin-top: 60px;
}
@media screen and (max-width: 768px) {
  .about-with-map__grid .col .description {
    margin-top: 40px;
  }
}
.about-with-map__grid .col .map {
  position: sticky;
  top: 126px;
  height: 400px;
  width: 100%;
  height: calc(100dvh - 86px - 40px - 35px);
}
@media screen and (max-width: 768px) {
  .about-with-map__grid .col .map {
    width: 100%;
    aspect-ratio: 361/600;
    height: auto;
    max-height: 70dvh;
  }
}
.about-with-map__grid .col-grid {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 16px;
}
@media screen and (max-width: 768px) {
  .about-with-map__grid .col-grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
.about-with-map__grid .col-grid .description {
  grid-column: 1/6;
}
.about-with-map__grid .col-grid.with-text {
  gap: 0;
}
.about-with-map__grid .col-grid.with-text h2 {
  margin-top: 12px;
  color: var(--dark-100, #091315);
  /* H2 */
  font-family: var(--archivo);
  font-size: 40px;
  font-style: normal;
  font-weight: 500;
  line-height: 44px;
  grid-column: 1/6;
}
@media screen and (max-width: 1220px) {
  .about-with-map__grid .col-grid.with-text h2 {
    font-size: 36px;
    font-style: normal;
    font-weight: 500;
    line-height: 40px;
  }
}
.about-with-map__grid .col-grid.with-text .info {
  margin-top: 24px;
  color: var(--dark-100, #091315);
  /* Body/L */
  font-family: var(--rethink);
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
  grid-column: 1/5;
}
@media screen and (max-width: 1220px) {
  .about-with-map__grid .col-grid.with-text .info {
    grid-column: 1/7;
  }
}
.about-with-map__grid .col-grid .block {
  grid-column: 1/6;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 56px;
}
@media screen and (max-width: 1024px) {
  .about-with-map__grid .col-grid .block {
    gap: 32px;
  }
}
.about-with-map__grid .col-grid .block .item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 12px;
}
.about-with-map__grid .col-grid .block .item h2 {
  background: var(--Gradient-2, linear-gradient(90deg, #A0C8E9 0%, #48C3D2 100%));
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  font-family: var(--archivo);
  font-size: 64px;
  font-style: normal;
  font-weight: 600;
  line-height: 64px;
  /* 100% */
  letter-spacing: -1.28px;
}
@media screen and (max-width: 1220px) {
  .about-with-map__grid .col-grid .block .item h2 {
    font-size: 36px;
    font-style: normal;
    font-weight: 500;
    line-height: 40px;
  }
}
.about-with-map__grid .col-grid .block .item .line {
  width: 100%;
  height: 1px;
  background: var(--dark-8, rgba(9, 19, 21, 0.08));
}
.about-with-map__grid .col-grid .block .item p {
  color: var(--dark-100, #091315);
  /* Body/M */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
  /* 162.5% */
  letter-spacing: 0.16px;
  max-width: 364px;
}
@media screen and (max-width: 768px) {
  .about-with-map__grid .col.desktop-map {
    display: none;
  }
}
.about-with-map__grid .col.mobile-map {
  display: none;
}
@media screen and (max-width: 768px) {
  .about-with-map__grid .col.mobile-map {
    display: block;
  }
}

.annual-report {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
@media screen and (max-width: 768px) {
  .annual-report {
    margin-top: 80px;
  }
}
.annual-report__grid {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
}
@media screen and (max-width: 1632px) {
  .annual-report__grid {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
@media screen and (max-width: 768px) {
  .annual-report__grid {
    grid-template-columns: 1fr;
  }
}
.annual-report__grid .col {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
}
.annual-report__grid .col .text-container {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 0 16px;
  position: sticky;
  top: 86px;
}
@media screen and (max-width: 768px) {
  .annual-report__grid .col .text-container {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
.annual-report__grid .col .text-container .description {
  grid-column: 1/7;
  margin-top: 60px;
}
@media screen and (max-width: 768px) {
  .annual-report__grid .col .text-container .description {
    margin-top: 0;
  }
}
.annual-report__grid .col .text-container h2 {
  margin-top: 12px;
  grid-column: 1/5;
  color: var(--dark-100, #091315);
  /* H2 */
  font-family: var(--archivo);
  font-size: 40px;
  font-style: normal;
  font-weight: 500;
  line-height: 44px;
}
@media screen and (max-width: 768px) {
  .annual-report__grid .col .text-container h2 {
    font-size: 36px;
    font-style: normal;
    font-weight: 500;
    line-height: 40px;
  }
}
.annual-report__grid .col .text-container > p {
  margin-top: 24px;
  grid-column: 1/4;
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
  font-variant: var(--rethink);
  color: var(--dark-100, #091315);
}
.annual-report__grid .col .text-container .links {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 24px;
  grid-column: 1/7;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-top: 56px;
}
.annual-report__grid .col .text-container .links .btn {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  border-radius: 2px;
  background: var(--blue-green-300100, #99D9E4);
  padding: 16px 32px;
  color: var(--dark-100, #091315);
  /* Body/Body M – Meduim */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
@media (hover: hover) {
  .annual-report__grid .col .text-container .links .btn:hover {
    cursor: pointer;
    background-color: var(--active);
  }
  .annual-report__grid .col .text-container .links .btn:hover svg {
    right: 4px;
    top: 4px;
  }
}
.annual-report__grid .col .text-container .links .btn:focus-visible {
  background-color: var(--active);
}
.annual-report__grid .col .text-container .links .btn:focus-visible svg {
  right: 4px;
  top: 4px;
}
.annual-report__grid .col .text-container .links .btn svg {
  position: absolute;
  top: 8px;
  right: 8px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-transition: 0.2s ease-out all;
  transition: 0.2s ease-out all;
}
.annual-report__grid .col .text-container .links .under {
  color: var(--dark-100, #091315);
  /* Body/Body M – Meduim */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  position: relative;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
@media (hover: hover) {
  .annual-report__grid .col .text-container .links .under:hover {
    cursor: pointer;
    color: var(--active);
  }
  .annual-report__grid .col .text-container .links .under:hover:after {
    background-color: var(--active);
  }
}
.annual-report__grid .col .text-container .links .under:focus-visible {
  color: var(--active);
}
.annual-report__grid .col .text-container .links .under:focus-visible:after {
  background-color: var(--active);
}
.annual-report__grid .col .text-container .links .under:after {
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  position: absolute;
  content: "";
  left: 0;
  top: 100%;
  height: 1px;
  border-radius: 5px;
  left: -1px;
  width: calc(100% + 6px);
  background-color: #A0C8E9;
}
.annual-report__grid .col .img-container {
  border-radius: 2px;
  background: var(--blue-green-100100, #DDF2F6);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  aspect-ratio: 792/865;
  padding: 40px;
}
.annual-report__grid .col .img-container.mobile {
  display: none;
  margin-top: 32px;
}
@media screen and (max-width: 768px) {
  .annual-report__grid .col .img-container.mobile {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    height: 280px;
  }
  .annual-report__grid .col .img-container.mobile img {
    max-height: 100%;
  }
}
@media screen and (max-width: 768px) {
  .annual-report__grid .col .img-container.desktop {
    display: none;
  }
}
.annual-report__grid .col .img-container img {
  height: auto;
  width: 100%;
  -o-object-fit: scale-down;
  object-fit: scale-down;
  max-width: 366px;
  max-height: 464px;
}

.hero__slider {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.hero__slider .heroSlider {
  width: 100%;
  position: relative;
}
.hero__slider .heroSlider .swiper-slide {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  height: auto;
}
.hero__slider .heroSlider .swiper-slide .slide-content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  position: relative;
  max-width: 1680px;
  width: 100%;
  margin-inline: auto;
  height: 100dvh;
  min-height: 600px;
  max-height: 945px;
}
.hero__slider .heroSlider .swiper-slide .slide-content .img-container {
  position: absolute;
  width: 100%;
  height: 100%;
}
.hero__slider .heroSlider .swiper-slide .slide-content .img-container .toner-up {
  position: absolute;
  width: 100%;
  height: 100%;
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0.64)), to(rgba(0, 0, 0, 0)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0.64) 0%, rgba(0, 0, 0, 0) 100%);
  bottom: 0;
  z-index: 3;
}
.hero__slider .heroSlider .swiper-slide .slide-content .img-container .toner-down {
  height: 625px;
  top: 0;
  position: absolute;
  width: 100%;
  height: 100%;
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0.16)), to(rgba(0, 0, 0, 0)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0.16) 0%, rgba(0, 0, 0, 0) 100%);
  z-index: 4;
}
.hero__slider .heroSlider .swiper-slide .slide-content .img-container img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}
.hero__slider .heroSlider .swiper-slide .slide-content .box {
  position: relative;
  z-index: 10;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 20px;
}
@media screen and (max-width: 768px) {
  .hero__slider .heroSlider .swiper-slide .slide-content .box {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: start;
  }
}
.hero__slider .heroSlider .swiper-slide .slide-content .box h1 {
  margin-inline: auto;
  color: var(--White, #FFF);
  text-align: center;
  /* H1 */
  font-family: var(--archivo);
  font-size: 40px;
  font-style: normal;
  font-weight: 600;
  line-height: 44px;
  /* 110% */
}
@media screen and (max-width: 768px) {
  .hero__slider .heroSlider .swiper-slide .slide-content .box h1 {
    font-size: 40px;
    font-style: normal;
    font-weight: 600;
    line-height: 44px;
    margin-top: 280px;
  }
}
@media screen and (max-height: 780px) {
  .hero__slider .heroSlider .swiper-slide .slide-content .box h1 {
    margin-top: 160px;
  }
}
.hero__slider .heroSlider .swiper-slide .slide-content .box p {
  color: var(--White, #FFF);
  text-align: center;
  /* Body/L */
  font-family: "Rethink Sans";
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
  /* 144.444% */
  margin-top: 24px;
  max-width: 538px;
}
@media screen and (max-width: 768px) {
  .hero__slider .heroSlider .swiper-slide .slide-content .box p {
    font-size: 18px;
    font-style: normal;
    font-weight: 400;
    line-height: 26px;
  }
}
.hero__slider .heroSlider .swiper-slide .slide-content .box .download {
  margin-top: 32px;
  position: relative;
  border-radius: 2px;
  background: var(--blue-green-300100, #99D9E4);
  color: var(--dark-100, #091315);
  /* Body/Body M – Meduim */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  padding: 16px 34px;
  /* 162.5% */
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
@media (hover: hover) {
  .hero__slider .heroSlider .swiper-slide .slide-content .box .download:hover {
    cursor: pointer;
    background: var(--active);
  }
  .hero__slider .heroSlider .swiper-slide .slide-content .box .download:hover .icon {
    -webkit-transform: translate(4px, -4px);
    -ms-transform: translate(4px, -4px);
    transform: translate(4px, -4px);
  }
}
.hero__slider .heroSlider .swiper-slide .slide-content .box .download:focus-visible {
  background: var(--active);
}
.hero__slider .heroSlider .swiper-slide .slide-content .box .download:focus-visible .icon {
  -webkit-transform: translate(4px, -4px);
  -ms-transform: translate(4px, -4px);
  transform: translate(4px, -4px);
}
.hero__slider .heroSlider .swiper-slide .slide-content .box .download .icon {
  -webkit-transition: 0.2s ease all;
  transition: 0.2s ease all;
  position: absolute;
  top: 8px;
  right: 8px;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 12px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.hero__slider .heroSlider .swiper-slide .slide-content .mobile-title {
  position: absolute;
  bottom: 80px;
  margin-top: auto;
  width: 100%;
  display: none;
  z-index: 3;
}
@media screen and (max-width: 768px) {
  .hero__slider .heroSlider .swiper-slide .slide-content .mobile-title {
    display: block;
  }
}
.hero__slider .heroSlider .swiper-slide .slide-content .mobile-title h3 {
  width: calc(100% - 72px - 72px);
  margin-inline: auto;
  color: var(--White, #FFF);
  text-align: center;
  /* Body/Body M – Meduim */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
}
.hero__slider .heroSlider .pagination-container {
  position: absolute;
  width: 100%;
  bottom: 100px;
  z-index: 2;
}
@media screen and (max-width: 768px) {
  .hero__slider .heroSlider .pagination-container {
    bottom: 32px;
  }
}
.hero__slider .heroSlider .pagination-container .hero-pagination {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
@media screen and (max-width: 1632px) {
  .hero__slider .heroSlider .pagination-container .hero-pagination {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
@media screen and (max-width: 768px) {
  .hero__slider .heroSlider .pagination-container .hero-pagination {
    gap: 29px;
  }
}
.hero__slider .heroSlider .pagination-container .hero-pagination .pagination {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 40px;
}
@media screen and (max-width: 768px) {
  .hero__slider .heroSlider .pagination-container .hero-pagination .pagination {
    gap: 8px;
  }
}
.hero__slider .heroSlider .pagination-container .hero-pagination .pagination .swiper-pagination-bullet {
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  border-radius: 0;
  text-wrap: nowrap;
  background-color: transparent;
  position: relative;
  opacity: 1;
  color: var(--White, #FFF);
}
@media screen and (max-width: 768px) {
  .hero__slider .heroSlider .pagination-container .hero-pagination .pagination .swiper-pagination-bullet {
    width: 100%;
  }
}
@media (hover: hover) {
  .hero__slider .heroSlider .pagination-container .hero-pagination .pagination .swiper-pagination-bullet:hover {
    cursor: pointer;
    color: var(--active);
  }
  .hero__slider .heroSlider .pagination-container .hero-pagination .pagination .swiper-pagination-bullet:hover .bar {
    background-color: #99D9E4;
  }
}
.hero__slider .heroSlider .pagination-container .hero-pagination .pagination .swiper-pagination-bullet:focus-visible {
  color: var(--active);
}
.hero__slider .heroSlider .pagination-container .hero-pagination .pagination .swiper-pagination-bullet:focus-visible .bar {
  background-color: #99D9E4;
}
.hero__slider .heroSlider .pagination-container .hero-pagination .pagination .swiper-pagination-bullet .text {
  color: inherit;
  /* Body/Body M – Meduim */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  -webkit-transition: 0.4s ease-out all;
  transition: 0.4s ease-out all;
}
@media screen and (max-width: 768px) {
  .hero__slider .heroSlider .pagination-container .hero-pagination .pagination .swiper-pagination-bullet .text {
    display: none;
  }
}
.hero__slider .heroSlider .pagination-container .hero-pagination .pagination .swiper-pagination-bullet .bar {
  position: absolute;
  top: calc(100% + 8px);
  height: 2px;
  width: 100%;
  border-radius: 5px;
  background-color: rgba(221, 242, 246, 0.4);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-transition: 0.4s ease-out all;
  transition: 0.4s ease-out all;
}
@media screen and (max-width: 768px) {
  .hero__slider .heroSlider .pagination-container .hero-pagination .pagination .swiper-pagination-bullet .bar {
    position: relative;
    z-index: 2;
    width: 100%;
    top: unset;
  }
}
.hero__slider .heroSlider .pagination-container .hero-pagination .pagination .swiper-pagination-bullet .bar::after {
  content: "";
  top: 0;
  position: absolute;
  width: 0;
  height: 2px;
  background-color: white;
  border-radius: 2px;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  left: 100%;
}
.hero__slider .heroSlider .pagination-container .hero-pagination .pagination .swiper-pagination-bullet.swiper-pagination-bullet-active {
  background-color: transparent;
}
.hero__slider .heroSlider .pagination-container .hero-pagination .pagination .swiper-pagination-bullet.swiper-pagination-bullet-active .bar:after {
  -webkit-transition: 0s;
  transition: 0s;
  right: auto;
  left: 0;
  width: var(--width);
}
.hero__slider .heroSlider .pagination-container .hero-pagination .slider-btn {
  display: none;
}
@media screen and (max-width: 768px) {
  .hero__slider .heroSlider .pagination-container .hero-pagination .slider-btn {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    color: white;
  }
}
.hero__slider .heroSlider .slider-btn-destop__container {
  position: absolute;
  width: 100%;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  z-index: 2;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  pointer-events: none;
}
@media screen and (max-width: 768px) {
  .hero__slider .heroSlider .slider-btn-destop__container {
    display: none;
  }
}
.hero__slider .heroSlider .slider-btn-destop__container .box {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  pointer-events: none;
}
@media screen and (max-width: 1680px) {
  .hero__slider .heroSlider .slider-btn-destop__container .box {
    width: calc(100% - 40px - 40px);
    margin-inline: 40px;
  }
}
.hero__slider .heroSlider .slider-btn-destop__container .box .slider-btn-desktop {
  pointer-events: all;
  color: white;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
@media (hover: hover) {
  .hero__slider .heroSlider .slider-btn-destop__container .box .slider-btn-desktop:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.hero__slider .heroSlider .slider-btn-destop__container .box .slider-btn-desktop:focus-visible {
  color: var(--active);
}

.news-tabs {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 100px;
}
.news-tabs__title {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 12px;
}
@media screen and (max-width: 1632px) {
  .news-tabs__title {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
.news-tabs__title h2 {
  color: var(--dark-100, #091315);
  /* H2 */
  font-family: var(--archivo);
  font-size: 40px;
  font-style: normal;
  font-weight: 500;
  line-height: 44px;
  /* 110% */
}
@media screen and (max-width: 768px) {
  .news-tabs__title h2 {
    font-size: 36px;
    font-style: normal;
    font-weight: 500;
    line-height: 40px;
  }
}
.news-tabs__controls {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 4px;
  margin-top: 32px;
}
@media screen and (max-width: 1632px) {
  .news-tabs__controls {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
@media screen and (max-width: 1632px) {
  .news-tabs__controls {
    width: 100%;
    margin-inline: auto;
    padding: 0 16px;
    overflow: auto;
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .news-tabs__controls::-webkit-scrollbar {
    width: 0;
    height: 0;
  }
}
.news-tabs__controls button {
  border-radius: 2px;
  background: var(--blue-green-10032, rgba(221, 242, 246, 0.4));
  gap: 8px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding: 16px 16px 16px 24px;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.news-tabs__controls button:first-child {
  padding: 16px 40px;
}
@media (hover: hover) {
  .news-tabs__controls button:hover {
    cursor: pointer;
    background-color: var(--active);
  }
}
.news-tabs__controls button:focus-visible {
  background-color: var(--active);
}
.news-tabs__controls button.active {
  background: var(--blue-green-300100, #99D9E4);
}
.news-tabs__controls button .text {
  color: var(--dark-100, #091315);
  /* Body/Body M – Meduim */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
}
.news-tabs__controls button .number {
  color: var(--dark-100, #091315);
  /* Body/Tech CAPS */
  font-family: var(--roboto);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px;
  /* 133.333% */
  letter-spacing: 0.12px;
  text-transform: uppercase;
}
.news-tabs__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 32px;
}
.news-tabs__container__tab {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
}
@media screen and (max-width: 1632px) {
  .news-tabs__container__tab {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
@media screen and (max-width: 1066px) {
  .news-tabs__container__tab {
    width: 100%;
    margin-inline: 0;
  }
}
.news-tabs__container__tab .newsTabsSlider {
  width: 100%;
}
.news-tabs__container__tab .newsTabsSlider .swiper-wrapper .swiper-slide {
  width: 100%;
  height: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
@media screen and (max-width: 1066px) {
  .news-tabs__container__tab .newsTabsSlider .swiper-wrapper .swiper-slide {
    width: 345px;
  }
}
.news-tabs__container__tab .news-tab-pagination {
  margin-top: 32px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 29px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: none;
}
@media screen and (max-width: 1066px) {
  .news-tabs__container__tab .news-tab-pagination {
    width: 100%;
    max-width: 1600px;
    margin-inline: auto;
  }
}
@media screen and (max-width: 1066px) and (max-width: 1632px) {
  .news-tabs__container__tab .news-tab-pagination {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
@media screen and (max-width: 768px) {
  .news-tabs__container__tab .news-tab-pagination {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
}
.news-tabs__container__tab .news-tab-pagination button {
  width: 24px;
  height: 24px;
  color: #091315;
}
@media (hover: hover) {
  .news-tabs__container__tab .news-tab-pagination button:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.news-tabs__container__tab .news-tab-pagination button:focus-visible {
  color: var(--active);
}
.news-tabs__container__tab .news-tab-pagination .pagination {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 8px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.news-tabs__container__tab .news-tab-pagination .pagination .swiper-pagination-bullet {
  border-radius: 2px;
  width: 100%;
  height: 2px;
  background-color: rgba(9, 19, 21, 0.0784313725);
  opacity: 1;
  position: relative;
}
.news-tabs__container__tab .news-tab-pagination .pagination .swiper-pagination-bullet:after {
  content: "";
  position: absolute;
  width: 0;
  height: 100%;
  border-radius: inherit;
  background: #091315;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  left: 100%;
}
.news-tabs__container__tab .news-tab-pagination .pagination .swiper-pagination-bullet-active:after {
  left: 0;
  -webkit-transition: 0s;
  transition: 0s;
  width: var(--width);
}

.partners {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 100px;
  margin-bottom: 100px;
}
@media screen and (max-width: 768px) {
  .partners {
    margin-top: 0;
    margin-bottom: 80px;
  }
}
.partners__title {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: 0 16px;
}
@media screen and (max-width: 1632px) {
  .partners__title {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
@media screen and (max-width: 768px) {
  .partners__title {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 0;
  }
}
.partners__title .description {
  grid-column: 1/13;
}
.partners__title h2,
.partners__title > p {
  grid-column: 1/5;
}
.partners__title h2 {
  margin-top: 12px;
  color: var(--dark-100, #091315);
  /* H2 */
  font-family: var(--archivo);
  font-size: 40px;
  font-style: normal;
  font-weight: 500;
  line-height: 44px;
}
@media screen and (max-width: 768px) {
  .partners__title h2 {
    font-size: 36px;
    line-height: 40px;
  }
}
.partners__title > p {
  color: var(--dark-100, #091315);
  margin-top: 24px;
  font-family: var(--rethink);
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
}
.partners__slider {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
}
@media screen and (max-width: 1632px) {
  .partners__slider {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
@media screen and (max-width: 1632px) {
  .partners__slider {
    width: 100%;
    margin-inline: 0;
  }
}
@media screen and (max-width: 1024px) {
  .partners__slider {
    width: 100%;
    margin-inline: 0;
  }
}
.partners__slider .partnersSliderIndex {
  width: calc(100% - 2px);
  margin-top: 32px;
}
.partners__slider .partnersSliderIndex .swiper-slide {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  height: auto;
  height: auto;
  padding: 1px 0;
}
@media screen and (max-width: 1024px) {
  .partners__slider .partnersSliderIndex .swiper-slide {
    width: 252px;
    height: 134px;
  }
}
.partners__slider .partnersSliderIndex .swiper-slide:last-child .card::before {
  position: absolute;
  right: 0;
  top: 0;
  content: "";
  width: 1px;
  height: calc(100% + 2px);
  background-color: rgba(9, 19, 21, 0.08);
}
.partners__slider .partnersSliderIndex .swiper-slide .card {
  border: 1px solid rgba(9, 19, 21, 0.08);
  position: relative;
  border-right: none;
  border-left: none;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 75px 30px 64px;
  overflow: hidden;
}
.partners__slider .partnersSliderIndex .swiper-slide .card:after {
  position: absolute;
  left: 0;
  top: 0;
  content: "";
  width: 1px;
  height: calc(100% + 2px);
  background-color: rgba(9, 19, 21, 0.08);
}
@media screen and (max-width: 1024px) {
  .partners__slider .partnersSliderIndex .swiper-slide .card {
    padding: 20px 40.5px;
  }
}
@media (hover: hover) {
  .partners__slider .partnersSliderIndex .swiper-slide .card:hover {
    cursor: pointer;
  }
  .partners__slider .partnersSliderIndex .swiper-slide .card:hover img {
    scale: 1.1;
  }
}
.partners__slider .partnersSliderIndex .swiper-slide .card:focus-visible img {
  scale: 1.1;
}
.partners__slider .partnersSliderIndex .swiper-slide .card img {
  max-width: 212.4px;
  max-height: 118px;
  width: 100%;
  height: auto;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  -o-object-fit: scale-down;
  object-fit: scale-down;
}
.partners__slider .partnersSliderIndex-pagination {
  display: none;
}
@media screen and (max-width: 768px) {
  .partners__slider .partnersSliderIndex-pagination {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
}
.partners__together {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 24px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: end;
  margin-top: 32px;
}
@media screen and (max-width: 1632px) {
  .partners__together {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
@media screen and (max-width: 768px) {
  .partners__together {
    margin-top: 56px;
  }
}
@media screen and (max-width: 510px) {
  .partners__together {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 16px;
    -webkit-box-align: start;
    -ms-flex-align: start;
    align-items: start;
  }
}
.partners__together p {
  color: var(--dark-100, #091315);
  /* Body/L */
  font-family: var(--rethink);
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
}
.partners__together p span {
  color: var(--blue-green-400100, #48C3D2);
}
.partners__together p a {
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  color: var(--blue-green-400100, #48C3D2);
}
@media (hover: hover) {
  .partners__together p a:hover {
    cursor: pointer;
    color: var(--active);
    text-decoration: underline;
  }
}
.partners__together p a:focus-visible {
  color: var(--active);
  text-decoration: underline;
}
.partners__together .btn {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border-radius: 2px;
  background: var(--blue-green-300100, #99D9E4);
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  padding: 16px 40px 16px 32px;
}
@media (hover: hover) {
  .partners__together .btn:hover {
    cursor: pointer;
    background-color: var(--active);
  }
}
.partners__together .btn:focus-visible {
  background-color: var(--active);
}
.partners__together .btn .text {
  color: var(--dark-100, #091315);
  /* Body/Body M – Meduim */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
}
.partners__together .btn svg {
  position: absolute;
  -webkit-transition: 0.2s ease all;
  transition: 0.2s ease all;
}
@media screen and (max-width: 510px) {
  .partners__together .btn {
    width: 100%;
  }
  .partners__together .btn .text {
    width: 100%;
    text-align: center;
  }
}
.partners__together .btn svg {
  top: 5px;
  right: 5px;
}

.science-projects-4 {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.science-projects-4__grid {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: grid;
  gap: 16px;
  grid-template-rows: 1fr 1fr;
  grid-template-columns: 1fr 1fr;
  margin-top: 32px;
}
@media screen and (max-width: 1632px) {
  .science-projects-4__grid {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
@media screen and (max-width: 1024px) {
  .science-projects-4__grid {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
  }
}

.faq_page {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 8px;
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  margin-top: 100px;
  margin-bottom: 93px;
}
@media screen and (max-width: 1640px) {
  .faq_page {
    width: calc(100% - 20px - 20px);
    margin-inline: 20px;
  }
}
@media screen and (max-width: 768px) {
  .faq_page {
    margin-top: 32px;
    margin-bottom: 80px;
  }
}
.faq_page .faq__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-bottom: 8px;
  border-bottom: 1px solid rgba(9, 19, 21, 0.0784313725);
}
.faq_page .faq__item.active .faq__item__title .icon__container .icon {
  background: var(--blue-green-200100, #99D9E4);
}
.faq_page .faq__item.active .faq__item__title .icon__container .icon svg {
  rotate: 315deg;
}
.faq_page .faq__item__title {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 16px;
}
@media (hover: hover) {
  .faq_page .faq__item__title:hover {
    cursor: pointer;
  }
  .faq_page .faq__item__title:hover .icon__container .icon {
    background-color: var(--active);
  }
}
.faq_page .faq__item__title:focus-visible .icon__container .icon {
  background-color: var(--active);
}
.faq_page .faq__item__title h3 {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: left;
  color: var(--dark-100, #091315);
  font-family: var(--archivo);
  font-size: 24px;
  font-style: normal;
  font-weight: 500;
  line-height: 32px;
  /* 133.333% */
  letter-spacing: -0.12px;
}
@media screen and (max-width: 768px) {
  .faq_page .faq__item__title h3 {
    font-size: 20px;
    font-style: normal;
    font-weight: 500;
    line-height: 26px;
    /* 130% */
    letter-spacing: -0.1px;
    font-family: var(--rethink);
  }
}
.faq_page .faq__item__title .icon__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-left: auto;
}
.faq_page .faq__item__title .icon__container .icon {
  width: 58px;
  height: 58px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  border-radius: 2px;
  -webkit-backdrop-filter: blur(12px);
  backdrop-filter: blur(12px);
  background-color: rgba(221, 242, 246, 0.4);
}
.faq_page .faq__item__title .icon__container .icon svg {
  -webkit-transition: 0.7s ease all;
  transition: 0.7s ease all;
  color: #091315;
  width: 18px;
  height: 18px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  aspect-ratio: 1/1;
}
.faq_page .faq__item__body {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
@media screen and (max-width: 768px) {
  .faq_page .faq__item__body {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
.faq_page .faq__item__body__content {
  padding-top: 8px;
  padding-bottom: 24px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  grid-column: 1/2;
}
.faq_page .faq__item__body__content .paragraph__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 12px;
}
.faq_page .faq__item__body__content p {
  color: var(--dark-100, #091315);
  /* Body/Article */
  font-family: "Rethink Sans";
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
}
.faq_page .faq__item__body__content b {
  font-weight: 600;
}
.faq_page .faq__item__body__content a {
  text-decoration: underline;
}
@media (hover: hover) {
  .faq_page .faq__item__body__content a:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.faq_page .faq__item__body__content a:focus-visible {
  color: var(--active);
}

.how-to-join {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 100px;
}
@media screen and (max-width: 768px) {
  .how-to-join {
    margin-top: 80px;
  }
}
.how-to-join__grid {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
  position: relative;
}
@media screen and (max-width: 1640px) {
  .how-to-join__grid {
    width: calc(100% - 20px - 20px);
    margin-inline: 20px;
  }
}
@media screen and (max-width: 1024px) {
  .how-to-join__grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
.how-to-join__grid__title {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 16px;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  position: sticky;
  top: 194px;
}
@media screen and (max-width: 1024px) {
  .how-to-join__grid__title {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    position: relative;
    top: unset;
  }
}
.how-to-join__grid__title h2 {
  color: var(--dark-100, #091315);
  grid-column: 1/7;
  /* H2 */
  font-family: var(--archivo);
  font-size: 40px;
  font-style: normal;
  font-weight: 500;
  line-height: 44px;
  /* 110% */
}
.how-to-join__grid__title p {
  grid-column: 1/5;
  color: var(--dark-100, #091315);
  /* Body/L */
  font-family: "Rethink Sans";
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
  /* 144.444% */
}
.how-to-join__grid__content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 16px;
  width: 100%;
}
.how-to-join__grid__content__block {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  padding-bottom: 32px;
  border-bottom: 1px solid rgba(9, 19, 21, 0.0784313725);
}
.how-to-join__grid__content__block:last-child {
  border-bottom: none;
  padding-bottom: 0;
}
@media screen and (max-width: 1024px) {
  .how-to-join__grid__content__block {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
.how-to-join__grid__content__block .step {
  padding-top: 16px;
  color: var(--dark-52, rgba(9, 19, 21, 0.52));
  /* Body/Tech CAPS */
  font-family: var(--roboto);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px;
  /* 133.333% */
  letter-spacing: 0.12px;
  text-transform: uppercase;
  grid-column: 1/7;
}
.how-to-join__grid__content__block h3 {
  margin-top: 12px;
  color: var(--dark-100, #091315);
  grid-column: 1/7;
  /* H3 */
  font-family: var(--archivo);
  font-size: 24px;
  font-style: normal;
  font-weight: 500;
  line-height: 32px;
  /* 133.333% */
  letter-spacing: -0.12px;
}
.how-to-join__grid__content__block h3 + * {
  margin-top: 16px !important;
}
.how-to-join__grid__content__block .paragraph__container {
  margin-top: 16px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 12px;
  grid-column: 1/7;
}
.how-to-join__grid__content__block .paragraph__container p {
  margin-top: 0;
}
.how-to-join__grid__content__block p {
  margin-top: 32px;
  color: var(--dark-100, #091315);
  /* Body/Article */
  font-family: "Rethink Sans";
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
  grid-column: 1/7;
}
.how-to-join__grid__content__block b {
  font-weight: 600;
}
.how-to-join__grid__content__block a {
  text-decoration: underline;
}
@media (hover: hover) {
  .how-to-join__grid__content__block a:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.how-to-join__grid__content__block a:focus-visible {
  color: var(--active);
}
.how-to-join__grid__content__block a[download] {
  padding-left: 19px;
  position: relative;
}
.how-to-join__grid__content__block a[download]::before {
  content: url(../../assets/icons/utils/document.svg);
  width: 18px;
  height: 18px;
  position: absolute;
  left: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}
.how-to-join__grid__content__block h4 {
  margin-top: 32px;
  grid-column: 1/5;
  color: var(--dark-100, #091315);
  /* H4 */
  font-family: "Rethink Sans";
  font-size: 20px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  /* 130% */
  letter-spacing: -0.1px;
}
@media screen and (max-width: 1024px) {
  .how-to-join__grid__content__block h4 {
    grid-column: 1/6;
  }
}
.how-to-join__grid__content__block ul {
  margin-top: 16px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 8px;
  width: 100%;
  position: relative;
  list-style: none;
  grid-column: 1/7;
  padding: 0;
}
.how-to-join__grid__content__block ul li {
  width: 100%;
  position: relative;
  padding-left: 28px;
  color: var(--dark-100, #091315);
  /* Body/L */
  font-family: "Rethink Sans";
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
  /* 144.444% */
}
.how-to-join__grid__content__block ul li:before {
  content: url(../../assets/icons/utils/list-decorate.svg);
  width: 24px;
  height: 24px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  position: absolute;
  top: 0;
  left: 0;
}
.how-to-join__grid__documents {
  display: grid;
  grid-template-columns: 1fr;
  grid-auto-rows: 1fr;
  gap: 8px;
  width: 100%;
}
.how-to-join__grid__documents .doc {
  padding: 16px;
  border-radius: 2px;
  border: 1px solid var(--dark-8, rgba(9, 19, 21, 0.08));
  gap: 16px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
@media screen and (max-width: 768px) {
  .how-to-join__grid__documents .doc {
    -webkit-box-align: start;
    -ms-flex-align: start;
    align-items: start;
  }
}
@media (hover: hover) {
  .how-to-join__grid__documents .doc:hover {
    cursor: pointer;
  }
  .how-to-join__grid__documents .doc:hover h5 {
    text-decoration: underline;
  }
  .how-to-join__grid__documents .doc:hover svg {
    opacity: 1;
  }
}
.how-to-join__grid__documents .doc:focus-visible h5 {
  text-decoration: underline;
}
.how-to-join__grid__documents .doc:focus-visible svg {
  opacity: 1;
}
.how-to-join__grid__documents .doc .icon {
  padding: 8px 12px;
  border-radius: 2px;
  background: #A0C8E9;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  color: var(--dark-100, #091315);
  /* Body/Tech CAPS */
  font-family: var(--roboto);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px;
  /* 133.333% */
  letter-spacing: 0.12px;
  text-transform: uppercase;
}
.how-to-join__grid__documents .doc h5 {
  min-height: 32px;
  text-align: left;
  color: var(--dark-100, #091315);
  /* Body/Body M – Meduim */
  font-family: "Rethink Sans";
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  /* 162.5% */
  letter-spacing: 0.16px;
}
.how-to-join__grid__documents .doc .svg__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-left: auto;
  -webkit-transition: inherit;
  transition: inherit;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.how-to-join__grid__documents .doc svg {
  opacity: 0;
  color: inherit;
  width: 18px;
  height: 18px;
  -webkit-transition: inherit;
  transition: inherit;
}
@media (hover: none) {
  .how-to-join__grid__documents .doc svg {
    opacity: 1;
  }
}

.reference_documents {
  margin-top: 100px;
}
@media screen and (max-width: 768px) {
  .reference_documents {
    margin-top: 80px;
  }
}

.index__hero {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}
.our-team {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 100px;
  margin-bottom: 100px;
  gap: 100px;
}
@media screen and (max-width: 768px) {
  .our-team {
    margin-top: 32px;
    gap: 80px;
    margin-bottom: 80px;
  }
}
.our-team__grid {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
}
@media screen and (max-width: 1640px) {
  .our-team__grid {
    width: calc(100% - 20px - 20px);
    margin-inline: 20px;
  }
}
@media screen and (max-width: 1024px) {
  .our-team__grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 32px;
  }
}
.our-team__grid .text {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 24px 16px;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
}
.our-team__grid .text h2 {
  grid-column: 1/6;
  color: var(--dark-100, #091315);
  font-family: var(--archivo);
  font-size: 40px;
  font-style: normal;
  font-weight: 500;
  line-height: 44px;
}
@media screen and (max-width: 768px) {
  .our-team__grid .text h2 {
    font-size: 36px;
    line-height: 40px;
  }
}
.our-team__grid .text p {
  grid-column: 1/5;
  color: var(--dark-100, #091315);
  /* Body/L */
  font-family: var(--rethink);
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
  /* 144.444% */
}
@media screen and (max-width: 1220px) {
  .our-team__grid .text p {
    grid-column: 1/6;
  }
}
.our-team__grid .text p:empty {
  display: none;
}
.our-team__grid .col__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}
.our-team__grid .col__container .voiting {
  padding-top: 5px;
  width: 100%;
  padding-bottom: 16px;
  margin-bottom: 16px;
  border-bottom: 1px solid rgba(9, 19, 21, 0.0784313725);
}
@media screen and (max-width: 1024px) {
  .our-team__grid .col__container .voiting {
    padding-top: 0;
  }
}
.our-team__grid .col__container .voiting h3 {
  color: var(--dark-100, #091315);
  /* H3 */
  font-family: var(--archivo);
  font-size: 24px;
  font-style: normal;
  font-weight: 500;
  line-height: 32px;
  /* 133.333% */
  letter-spacing: -0.12px;
}
.our-team__grid .col__container .non-voiting {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 56px;
}
@media screen and (max-width: 1024px) {
  .our-team__grid .col__container .non-voiting {
    margin-top: 32px;
  }
}
.our-team__grid .col__container .non-voiting .title {
  padding-bottom: 16px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  margin-bottom: 16px;
  border-bottom: 1px solid rgba(9, 19, 21, 0.0784313725);
}
.our-team__grid .col__container .non-voiting ul {
  list-style-type: none;
  padding-left: 0;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.our-team__grid .col__container .non-voiting ul li {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}
.our-team__grid .col__container .non-voiting ul li .name {
  color: var(--dark-100, #091315);
  /* Body/L */
  font-family: var(--rethink);
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
  /* 144.444% */
}
.our-team__grid .col__container .non-voiting ul li .role {
  color: var(--dark-52, rgba(9, 19, 21, 0.52));
  /* Body/Tech CAPS */
  font-family: var(--roboto);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px;
  /* 133.333% */
  letter-spacing: 0.12px;
  text-transform: uppercase;
}
.our-team__grid .peoples {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 24px 16px;
  min-width: 650px;
}
@media screen and (max-width: 680px) {
  .our-team__grid .peoples {
    gap: 10px;
    min-width: unset;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
.our-team__grid .peoples .person {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 16px;
}
.our-team__grid .peoples .person img {
  width: 119px;
  height: 119px;
  -o-object-fit: cover;
  object-fit: cover;
  -o-object-position: center;
  object-position: center;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-radius: 2px;
}
.our-team__grid .peoples .person .info {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
}
.our-team__grid .peoples .person .name,
.our-team__grid .peoples .person .country {
  color: var(--dark-100, #091315);
  /* Body/L */
  font-family: "Rethink Sans";
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
  /* 144.444% */
}
.our-team__grid .peoples .person .role {
  margin-top: 8px;
  color: var(--dark-52, rgba(9, 19, 21, 0.52));
  /* Body/Tech CAPS */
  font-family: var(--roboto);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px;
  /* 133.333% */
  letter-spacing: 0.12px;
  text-transform: uppercase;
}
.our-team__grid .peoples .person .role:empty {
  display: none;
}

.footer {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 56px;
  border-top: 1px solid var(--dark-8, rgba(9, 19, 21, 0.08));
  max-width: 1680px;
  width: 100%;
  margin-inline: auto;
}
@media screen and (max-width: 768px) {
  .footer {
    padding-top: 16px;
  }
}
.footer .download__for__footer {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 16px;
  padding: 16px 24px;
  border-radius: 2px;
  background: var(--blue-green-10032, rgba(221, 242, 246, 0.4));
  max-width: 285px;
  -webkit-transition: 0.2s ease all;
  transition: 0.2s ease all;
}
.footer .download__for__footer.desktop {
  margin-top: auto;
  margin-bottom: 120px;
}
@media screen and (max-width: 1280px) {
  .footer .download__for__footer.desktop {
    margin-bottom: 0;
  }
}
@media screen and (max-width: 768px) {
  .footer .download__for__footer.desktop {
    display: none;
  }
}
.footer .download__for__footer.mobile {
  display: none;
}
@media screen and (max-width: 768px) {
  .footer .download__for__footer.mobile {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    margin-top: 56px;
  }
}
@media (hover: hover) {
  .footer .download__for__footer:hover {
    cursor: pointer;
    background-color: var(--blue-green-300100, #99D9E4);
  }
  .footer .download__for__footer:hover .icon {
    background-color: var(--active);
  }
  .footer .download__for__footer:hover .icon svg {
    -webkit-animation: bounce 0.6s;
    animation: bounce 0.6s;
  }
}
.footer .download__for__footer:focus-visible {
  background-color: var(--blue-green-300100, #99D9E4);
}
.footer .download__for__footer:focus-visible .icon {
  background-color: var(--active);
}
.footer .download__for__footer:focus-visible .icon svg {
  -webkit-animation: bounce 0.6s;
  animation: bounce 0.6s;
}
.footer .download__for__footer .icon {
  border-radius: 2px;
  background: var(--blue-green-300100, #99D9E4);
  -webkit-backdrop-filter: blur(12px);
  backdrop-filter: blur(12px);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  justify-items: center;
  padding: 16px;
}
.footer .download__for__footer .icon svg {
  -webkit-transition: 0.2s ease all;
  transition: 0.2s ease all;
}
.footer .download__for__footer .text {
  color: var(--dark-100, #091315);
  /* Body/Body M – Meduim */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
}
.footer__container {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
}
@media screen and (max-width: 1632px) {
  .footer__container {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
@media screen and (max-width: 768px) {
  .footer__container {
    grid-template-columns: 1fr;
  }
}
@media screen and (max-width: 768px) {
  .footer__container__links {
    gap: 32px;
  }
}
.footer__container__links .col {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 32px;
}
.footer__container__links .col .grid {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 16px;
}
@media screen and (max-width: 768px) {
  .footer__container__links .col .grid {
    grid-template-columns: 1fr;
  }
}
.footer__container__links .col .logo-contianer {
  grid-column: 1/3;
}
@media screen and (max-width: 768px) {
  .footer__container__links .col .logo-contianer {
    grid-column: auto;
    height: 129px;
    width: 129px;
  }
}
@media (hover: hover) {
  .footer__container__links .col .logo-contianer:hover {
    cursor: pointer;
  }
  .footer__container__links .col .logo-contianer:hover svg {
    scale: 1.05;
  }
}
.footer__container__links .col .logo-contianer:focus-visible svg {
  scale: 1.05;
}
.footer__container__links .col .logo-contianer svg {
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
@-webkit-keyframes bounce {
  0% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    /* Початкова позиція */
  }
  50% {
    -webkit-transform: translateY(-4px);
    transform: translateY(-4px);
    /* Рух вгору на 4 пікселі */
  }
  100% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    /* Початкова позиція */
  }
}
@keyframes bounce {
  0% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    /* Початкова позиція */
  }
  50% {
    -webkit-transform: translateY(-4px);
    transform: translateY(-4px);
    /* Рух вгору на 4 пікселі */
  }
  100% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    /* Початкова позиція */
  }
}
.footer__container__links .col__main_grid {
  display: grid;
  grid-template-columns: 593fr 195fr;
  gap: 4px;
}
@media screen and (max-width: 1286px) {
  .footer__container__links .col__main_grid {
    grid-template-columns: 593fr 125fr;
  }
}
@media screen and (max-width: 1280px) {
  .footer__container__links .col__main_grid {
    grid-template-columns: 1fr;
  }
}
@media screen and (max-width: 768px) {
  .footer__container__links .col__main_grid {
    grid-template-columns: 1fr;
  }
}
.footer__container__links .col__main_grid .col__add_grid {
  display: grid;
  grid-template-columns: 334fr 209fr;
  gap: 50px;
  padding-bottom: 124px;
}
@media screen and (max-width: 1280px) {
  .footer__container__links .col__main_grid .col__add_grid {
    padding-bottom: 0;
  }
}
@media screen and (max-width: 768px) {
  .footer__container__links .col__main_grid .col__add_grid {
    grid-template-columns: 1fr;
    gap: 16px;
  }
}
.footer__container__links .col__main_grid .column {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 56px;
}
@media screen and (max-width: 768px) {
  .footer__container__links .col__main_grid .column {
    gap: 16px;
  }
}
.footer__container__links .col__main_grid .column .block {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.footer__container__links .col__main_grid .column .block__header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  gap: 16px;
}
@media (hover: hover) {
  .footer__container__links .col__main_grid .column .block__header:hover {
    cursor: pointer;
    cursor: unset;
  }
}
.footer__container__links .col__main_grid .column .block__header:focus-visible {
  cursor: unset;
}
@media screen and (max-width: 768px) and (hover: hover) {
  .footer__container__links .col__main_grid .column .block__header:hover {
    cursor: pointer;
  }
  .footer__container__links .col__main_grid .column .block__header:hover .text {
    color: var(--active);
  }
  .footer__container__links .col__main_grid .column .block__header:hover .icon svg {
    color: var(--active);
  }
}
@media screen and (max-width: 768px) {
  .footer__container__links .col__main_grid .column .block__header:focus-visible .text {
    color: var(--active);
  }
  .footer__container__links .col__main_grid .column .block__header:focus-visible .icon svg {
    color: var(--active);
  }
}
.footer__container__links .col__main_grid .column .block__header.active .icon svg {
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}
.footer__container__links .col__main_grid .column .block__header .text {
  color: var(--dark-52, rgba(9, 19, 21, 0.52));
  font-family: var(--roboto);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 22px;
  /* 183.333% */
  letter-spacing: 0.12px;
  text-transform: uppercase;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
@media screen and (max-width: 768px) {
  .footer__container__links .col__main_grid .column .block__header .text {
    text-transform: none;
    color: var(--dark-100, #091315);
    /* H4 */
    font-family: var(--rethink);
    font-size: 20px;
    font-style: normal;
    font-weight: 500;
    line-height: 26px;
    /* 130% */
    letter-spacing: -0.1px;
  }
}
.footer__container__links .col__main_grid .column .block__header .icon {
  display: none;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
@media screen and (max-width: 768px) {
  .footer__container__links .col__main_grid .column .block__header .icon {
    display: block;
    color: #091315;
    width: 18px;
    height: 18px;
  }
}
.footer__container__links .col__main_grid .column .block__body {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding-top: 24px;
}
@media screen and (max-width: 768px) {
  .footer__container__links .col__main_grid .column .block__body {
    padding-top: 16px;
  }
}
.footer__container__links .col__main_grid .column .block__main {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  list-style-type: none;
  padding: 0;
  gap: 8px;
}
.footer__container__links .col__main_grid .column .block__main li {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.footer__container__links .col__main_grid .column .block__main li a {
  -webkit-transition: inherit;
  transition: inherit;
  color: var(--dark-100, #091315);
  /* Body/M */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
  /* 162.5% */
  letter-spacing: 0.16px;
  text-decoration-line: underline;
  text-decoration-style: solid;
  -webkit-text-decoration-skip: ink;
  text-decoration-skip-ink: auto;
  text-decoration-thickness: auto;
  text-underline-offset: auto;
  text-underline-position: from-font;
  width: 100%;
}
@media (hover: hover) {
  .footer__container__links .col__main_grid .column .block__main li a:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.footer__container__links .col__main_grid .column .block__main li a:focus-visible {
  color: var(--active);
}
.footer__container__links .col__main_grid .column .block__main li:has(button) {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.footer__container__links .col__main_grid .column .block__main li button {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 4px;
  -webkit-transition: inherit;
  transition: inherit;
}
@media (hover: hover) {
  .footer__container__links .col__main_grid .column .block__main li button:hover {
    cursor: pointer;
  }
  .footer__container__links .col__main_grid .column .block__main li button:hover .text,
  .footer__container__links .col__main_grid .column .block__main li button:hover svg {
    color: var(--active);
  }
}
.footer__container__links .col__main_grid .column .block__main li button:focus-visible .text,
.footer__container__links .col__main_grid .column .block__main li button:focus-visible svg {
  color: var(--active);
}
.footer__container__links .col__main_grid .column .block__main li button.active .text {
  font-weight: 500;
}
.footer__container__links .col__main_grid .column .block__main li button.active svg {
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}
.footer__container__links .col__main_grid .column .block__main li button svg {
  width: 12px;
  height: 12px;
  color: #091315;
  -webkit-transition: inherit;
  transition: inherit;
}
.footer__container__links .col__main_grid .column .block__main li button .text {
  -webkit-transition: inherit;
  transition: inherit;
}
.footer__container__links .col__main_grid .column .block__main li .dropdown {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 16px 0 8px;
  gap: 4px;
}
.footer__container__links .col__main_grid .column .block__main li .dropdown .link {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 4px;
  text-decoration: none;
}
.footer__container__links .col__main_grid .column .block__main li .dropdown .link svg {
  width: 12px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}
.footer__container__links .col__main_grid .column .block__main li .dropdown .text {
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  text-decoration: none;
}
.footer__container__links .col__main_grid .column .block-links {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 24px;
  width: 100%;
}
.footer__container__links .col__main_grid .column .block-links a {
  width: 100%;
  color: var(--dark-100, #091315);
  /* Body/M */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
  /* 162.5% */
  letter-spacing: 0.16px;
  text-decoration-line: underline;
  text-decoration-style: solid;
  -webkit-text-decoration-skip: ink;
  text-decoration-skip-ink: auto;
  text-decoration-thickness: auto;
  text-underline-offset: auto;
  text-underline-position: from-font;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
@media (hover: hover) {
  .footer__container__links .col__main_grid .column .block-links a:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.footer__container__links .col__main_grid .column .block-links a:focus-visible {
  color: var(--active);
}
@media screen and (max-width: 768px) {
  .footer__container__links .col__main_grid .column .block-links a {
    text-transform: none;
    color: var(--dark-100, #091315);
    /* H4 */
    font-family: var(--rethink);
    font-size: 20px;
    font-style: normal;
    font-weight: 500;
    line-height: 26px;
    /* 130% */
    letter-spacing: -0.1px;
    text-decoration: none;
  }
}
.footer__container__links .col__main_grid .frame {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
@media screen and (max-width: 1280px) {
  .footer__container__links .col__main_grid .frame {
    display: none;
  }
}
.footer__container__links .col__main_grid .frame svg {
  margin-top: auto;
}
.footer__container__links .separator {
  display: none;
}
@media screen and (max-width: 768px) {
  .footer__container__links .separator {
    display: block;
    width: 100%;
    height: 1px;
    background: var(--dark-8, rgba(9, 19, 21, 0.08));
  }
}
.footer__info {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  margin-top: 40px;
  border-top: 1px solid var(--dark-8, rgba(9, 19, 21, 0.08));
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 24px 0;
}
@media screen and (max-width: 1632px) {
  .footer__info {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
.footer__info .grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
}
@media screen and (max-width: 768px) {
  .footer__info .grid {
    grid-template-columns: 1fr;
  }
}
.footer__info .col {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  gap: 32px;
}
@media screen and (max-width: 1305px) {
  .footer__info .col {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 16px;
    -webkit-box-align: start;
    -ms-flex-align: start;
    align-items: start;
  }
}
.footer__info .col h5 {
  color: var(--dark-52, rgba(9, 19, 21, 0.52));
  /* Body/XS */
  font-family: var(--rethink);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px;
  /* 133.333% */
  letter-spacing: 0.18px;
}
.footer__info .col .nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.footer__info .col .nav ul {
  list-style-type: none;
  padding: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 32px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
@media screen and (max-width: 920px) {
  .footer__info .col .nav ul {
    gap: 16px;
  }
}
.footer__info .col .nav ul a {
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  color: var(--dark-100, #091315);
  /* Body/XS */
  font-family: var(--rethink);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px;
  /* 133.333% */
  letter-spacing: 0.18px;
  text-decoration-line: underline;
  text-decoration-style: solid;
  -webkit-text-decoration-skip: ink;
  text-decoration-skip-ink: auto;
  text-decoration-thickness: auto;
  text-underline-offset: auto;
  text-underline-position: from-font;
}
@media (hover: hover) {
  .footer__info .col .nav ul a:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.footer__info .col .nav ul a:focus-visible {
  color: var(--active);
}
.footer__info .col .print {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: var(--dark-100, #091315);
  gap: 8px;
}
@media (hover: hover) {
  .footer__info .col .print:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.footer__info .col .print:focus-visible {
  color: var(--active);
}
.footer__info .col .print .icon {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: inherit;
}
.footer__info .col .print .icon svg {
  color: inherit;
  width: 18px;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.footer__info .col .print .text {
  color: inherit;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  text-align: right;
  /* Body/Body M – Meduim */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  /* 162.5% */
  text-decoration-line: underline;
}
@media screen and (max-width: 768px) {
  .footer.has_bread-crupms {
    padding-top: 0;
  }
  .footer.has_bread-crupms .footer__breadcrumps {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    margin-bottom: 16px;
    border-bottom: 1px solid var(--dark-8, rgba(9, 19, 21, 0.08));
  }
}
.footer__breadcrumps {
  width: 100%;
  display: none;
  padding: 8px 16px;
  overflow: auto;
  scrollbar-width: none;
  -ms-overflow-style: none;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 16px;
}
.footer__breadcrumps::-webkit-scrollbar {
  /* WebKit */
  width: 0;
  height: 0;
}
.footer__breadcrumps .separator {
  width: 1px;
  height: 8px;
  background: var(--dark-32, rgba(9, 19, 21, 0.32));
  -ms-flex-negative: 0;
  flex-shrink: 0;
}
.footer__breadcrumps a {
  color: rgba(9, 19, 21, 0.3215686275);
  font-family: "Rethink Sans";
  font-size: 14px;
  font-style: normal;
  font-weight: 400;
  line-height: 22px;
  /* 157.143% */
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  letter-spacing: 0.14px;
  text-wrap: nowrap;
}
@media (hover: hover) {
  .footer__breadcrumps a:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.footer__breadcrumps a:focus-visible {
  color: var(--active);
}
.footer__breadcrumps a svg {
  width: 18px;
  height: 18px;
  aspect-ratio: 1/1;
  color: inherit;
}

.header {
  position: sticky;
  top: 0;
  width: 100%;
  background: var(--White, #FFF);
  -webkit-backdrop-filter: blur(16px);
  backdrop-filter: blur(16px);
  z-index: 1000;
}
.header.fixed {
  position: fixed;
}
.header.fixed.map-visible {
  z-index: -1;
}
.header.scrolled:after {
  opacity: 1;
}
.header.openMenu:after {
  opacity: 1;
}
.header:after {
  content: "";
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: 1px;
  background-color: var(--dark-8, rgba(9, 19, 21, 0.08));
  opacity: 0;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.header__container {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 20px;
  position: relative;
}
@media screen and (max-width: 1632px) {
  .header__container {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
@media screen and (max-width: 1230px) {
  .header__container {
    gap: 16px;
  }
}
.header__container .logo__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}
.header__container .logo__container.change .logo {
  display: none;
}
.header__container .logo__container.change .back {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.header__container .logo__container .logo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  margin-top: 2px;
  margin-bottom: 2px;
}
@media screen and (max-width: 768px) {
  .header__container .logo__container .logo {
    margin-top: 4px;
    margin-bottom: 4px;
  }
}
@media (hover: hover) {
  .header__container .logo__container .logo:hover {
    cursor: pointer;
  }
  .header__container .logo__container .logo:hover svg {
    -webkit-transform: scale(1.05);
    -ms-transform: scale(1.05);
    transform: scale(1.05);
  }
}
.header__container .logo__container .logo:focus-visible svg {
  -webkit-transform: scale(1.05);
  -ms-transform: scale(1.05);
  transform: scale(1.05);
}
.header__container .logo__container .logo svg {
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}
.header__container .logo__container .back {
  display: none;
  gap: 12px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: var(--dark-100, #091315);
}
@media (hover: hover) {
  .header__container .logo__container .back:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.header__container .logo__container .back:focus-visible {
  color: var(--active);
}
.header__container .logo__container .back .icon {
  color: inherit;
  width: 18px;
  height: 18px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.header__container .logo__container .back .text {
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  color: inherit;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  /* H4 */
  font-family: var(--rethink);
  font-size: 20px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  /* 130% */
  letter-spacing: -0.1px;
}
.header__container nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 32px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-left: auto;
  margin-right: auto;
}
@media screen and (max-width: 1230px) {
  .header__container nav {
    gap: 16px;
  }
}
@media screen and (max-width: 1123px) {
  .header__container nav {
    display: none;
  }
}
.header__container nav .button {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 4px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  color: var(--dark-100, #091315);
}
@media (hover: hover) {
  .header__container nav .button:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.header__container nav .button:focus-visible {
  color: var(--active);
}
.header__container nav .button .text {
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
}
.header__container nav .button:after {
  -webkit-transition: 0.4s ease-out all;
  transition: 0.4s ease-out all;
  content: "";
  left: 0;
  position: absolute;
  width: 0%;
  height: 2px;
  background-color: var(--Gradient-2, #A0C8E9);
  bottom: -31px;
  border-radius: 3px;
}
.header__container nav .button.active:after {
  width: 100%;
}
.header__container nav .button.active svg {
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}
.header__container nav .splitter {
  width: 1px;
  height: 16px;
  background: var(--dark-8, rgba(9, 19, 21, 0.08));
}
.header__container .btns {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 12px;
}
@media screen and (max-width: 1123px) {
  .header__container .btns {
    display: none;
  }
}
.header__container .btns .search {
  width: 46px;
  height: 46px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: #091315;
}
@media (hover: hover) {
  .header__container .btns .search:hover {
    cursor: pointer;
    color: var(--active);
  }
  .header__container .btns .search:hover svg {
    -webkit-transform: scale(1.05);
    -ms-transform: scale(1.05);
    transform: scale(1.05);
  }
}
.header__container .btns .search:focus-visible {
  color: var(--active);
}
.header__container .btns .search:focus-visible svg {
  -webkit-transform: scale(1.05);
  -ms-transform: scale(1.05);
  transform: scale(1.05);
}
.header__container .btns .download {
  padding: 12px 32px;
  position: relative;
  border-radius: 2px;
  background: var(--blue-green-300100, #99D9E4);
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  color: var(--dark-100, #091315);
  -webkit-transition: 0.2s ease-out all;
  transition: 0.2s ease-out all;
}
@media (hover: hover) {
  .header__container .btns .download:hover {
    cursor: pointer;
    background: var(--active);
  }
  .header__container .btns .download:hover .icon {
    top: 4px;
    right: 4px;
  }
}
.header__container .btns .download:focus-visible {
  background: var(--active);
}
.header__container .btns .download:focus-visible .icon {
  top: 4px;
  right: 4px;
}
.header__container .btns .download .icon {
  -webkit-transition: 0.2s ease-out all;
  transition: 0.2s ease-out all;
  position: absolute;
  right: 8px;
  top: 8px;
  width: 12px;
  height: 12px;
}
.header__container .mobile {
  display: none;
}
@media screen and (max-width: 1123px) {
  .header__container .mobile {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    margin-left: auto;
    width: 46px;
    height: 90px;
    overflow: hidden;
    position: relative;
  }
  .header__container .mobile .icons__container {
    position: absolute;
    width: 100%;
    height: 200%;
    display: grid;
    grid-template-rows: 90px 90px;
    -webkit-transition: 0.6s ease-in-out all;
    transition: 0.6s ease-in-out all;
    top: 0;
  }
  .header__container .mobile .icons__container .icon {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-transition: 0.5s ease-in-out all;
    transition: 0.5s ease-in-out all;
    -webkit-transition-delay: 0;
    transition-delay: 0;
  }
  .header__container .mobile .icons__container .icon:last-child {
    opacity: 0;
  }
  .header__container .mobile .icons__container svg {
    -ms-flex-negative: 0;
    flex-shrink: 0;
  }
  .header__container .mobile.active .icons__container {
    top: -90px;
  }
  .header__container .mobile.active .icons__container .icon {
    -webkit-transition-delay: 100ms;
    transition-delay: 100ms;
  }
  .header__container .mobile.active .icons__container .icon:last-child {
    opacity: 1;
  }
  .header__container .mobile.active .icons__container .icon:first-child {
    opacity: 0;
  }
}
.header__dropdown_links {
  width: 100%;
  position: absolute;
  top: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  background: var(--White, #FFF);
  -webkit-backdrop-filter: blur(16px);
  backdrop-filter: blur(16px);
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
@media screen and (max-width: 1123px) {
  .header__dropdown_links {
    display: none;
  }
}
.header__dropdown_links.active {
  background-color: teal;
}
.header__dropdown_links__container {
  width: 100%;
  max-width: 792px;
  margin-inline: auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
  padding: 40px 0;
}
@media screen and (max-width: 824px) {
  .header__dropdown_links__container {
    width: calc(100% - 16px - 16px);
    margin-inline: 16px;
  }
}
.header__dropdown_links__container .col {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.header__dropdown_links__container .col__links h3 {
  margin-top: 16px;
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 22px;
  /* 183.333% */
  letter-spacing: 0.12px;
  text-transform: uppercase;
  color: var(--dark-52, rgba(9, 19, 21, 0.52));
  font-family: var(--roboto);
}
.header__dropdown_links__container .col__links nav {
  margin-top: 24px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.header__dropdown_links__container .col__links nav ul {
  list-style: none;
  padding-left: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 8px;
}
.header__dropdown_links__container .col__links nav ul li {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.header__dropdown_links__container .col__links nav ul a {
  width: 100%;
  color: var(--dark-100, #091315);
  /* H3 */
  font-family: var(--archivo);
  font-size: 24px;
  font-style: normal;
  font-weight: 500;
  line-height: 32px;
  /* 133.333% */
  letter-spacing: -0.12px;
}
@media (hover: hover) {
  .header__dropdown_links__container .col__links nav ul a:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.header__dropdown_links__container .col__links nav ul a:focus-visible {
  color: var(--active);
}
.header__dropdown_links__container .col__links nav ul button {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
  width: 100%;
  color: var(--dark-100, #091315);
  /* H3 */
  font-family: var(--archivo);
  font-size: 24px;
  font-style: normal;
  font-weight: 500;
  line-height: 32px;
  /* 133.333% */
  letter-spacing: -0.12px;
}
.header__dropdown_links__container .col__links nav ul button.active svg {
  rotate: 180deg;
}
.header__dropdown_links__container .col__links nav ul button svg {
  width: 24px;
  height: 24px;
}
@media (hover: hover) {
  .header__dropdown_links__container .col__links nav ul button:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.header__dropdown_links__container .col__links nav ul button:focus-visible {
  color: var(--active);
}
.header__dropdown_links__container .col__links nav ul .dropdown {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 8px;
}
.header__dropdown_links__container .col__links nav ul .dropdown a {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}
.header__dropdown_links__container .col__links nav ul .dropdown a .icon svg {
  width: 16px;
  height: 16px;
}
.header__dropdown_links__container .col__img {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 75px 82px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 2px;
}
.header__dropdown_links__container .col__img img {
  width: 100%;
  -o-object-fit: scale-down;
  object-fit: scale-down;
  height: auto;
  max-width: 100%;
  max-height: 100%;
}
.header__dropdown_links__container .col__article article {
  margin-top: 16px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 24px;
}
.header__dropdown_links__container .col__article article img {
  border-radius: 2px;
  width: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  aspect-ratio: 388/288;
}
.header__dropdown_links__container .col__article article h4 {
  padding-right: 36px;
  overflow: hidden;
  color: var(--dark-100, #091315);
  text-overflow: ellipsis;
  /* H4 */
  font-family: "Rethink Sans";
  font-size: 20px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  /* 130% */
  letter-spacing: -0.1px;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
}

.map__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background-color: rgba(221, 242, 246, 0.4);
  position: relative;
  overflow: hidden;
  z-index: 0;
}
.map__container:not(.active) * {
  pointer-events: none;
}
.map__container #map {
  width: 100%;
  height: 100%;
  background-color: rgba(221, 242, 246, 0.4);
}
.map__container #map:active, .map__container #map:focus, .map__container #map:focus-visible {
  border: none;
  outline: none;
}
.map__container .map__data_container {
  position: absolute;
  top: 8px;
  height: calc(100% - 16px);
  width: 346px;
  max-width: calc(100% - 16px);
  z-index: 1000;
  border-radius: 2px;
  background: var(--White, #FFF);
  -webkit-backdrop-filter: blur(16px);
  backdrop-filter: blur(16px);
  right: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: 0.4s ease-out transform;
  transition: 0.4s ease-out transform;
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}
.map__container .map__data_container.active {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
  right: 8px;
}
.map__container .map__data_container__heading {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 4px;
  padding: 16px;
  background: var(--Blue, #A0C8E9);
}
.map__container .map__data_container__heading button {
  margin-left: auto;
  width: 24px;
  color: #091315;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-transition: 0.2s ease all;
  transition: 0.2s ease all;
}
@media (hover: hover) {
  .map__container .map__data_container__heading button:hover {
    cursor: pointer;
    -webkit-transform: scale(1.2);
    -ms-transform: scale(1.2);
    transform: scale(1.2);
  }
}
.map__container .map__data_container__heading button:focus-visible {
  -webkit-transform: scale(1.2);
  -ms-transform: scale(1.2);
  transform: scale(1.2);
}
.map__container .map__data_container__body {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  overflow: auto;
  padding: 24px;
}
.map__container .map__data_container__body .content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 8px;
  width: 100%;
}
.map__container .map__data_container__body .content .item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 8px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}
.map__container .map__data_container__body .content .item .key {
  color: var(--dark-52, rgba(9, 19, 21, 0.52));
  /* Body/S */
  font-family: var(--rethink);
  font-size: 14px;
  font-style: normal;
  font-weight: 400;
  line-height: 22px;
  /* 157.143% */
  letter-spacing: 0.14px;
}
.map__container .map__data_container__body .content .item .value {
  color: var(--dark-100, #091315);
  text-align: right;
  /* Body/S – Bold */
  font-family: var(--rethink);
  font-size: 14px;
  font-style: normal;
  font-weight: 600;
  line-height: 22px;
  /* 157.143% */
  letter-spacing: 0.14px;
}
.map__container .map__data_container__footer {
  padding: 16px;
  background: var(--Blue, #A0C8E9);
}
.map__container .map__controls {
  position: absolute;
  right: 16px;
  bottom: 16px;
  z-index: 900;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 12px;
}
.map__container .map__controls .block {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.map__container .map__controls .block button:first-child {
  padding-bottom: 8px;
  border-radius: 2px 2px 0 0;
}
.map__container .map__controls .block button:last-child {
  padding-top: 8px;
  border-radius: 0 0 2px 2px;
}
.map__container .map__controls button {
  padding: 16px;
  border-radius: 2px;
  background: var(--dark-32, rgba(9, 19, 21, 0.32));
  -webkit-backdrop-filter: blur(16px);
  backdrop-filter: blur(16px);
}
@media (hover: hover) {
  .map__container .map__controls button:hover {
    cursor: pointer;
  }
  .map__container .map__controls button:hover svg {
    scale: 1.2;
  }
}
.map__container .map__controls button:focus-visible svg {
  scale: 1.2;
}
.map__container .map__controls button svg {
  -webkit-transition: 0.1s ease all;
  transition: 0.1s ease all;
  width: 24px;
  height: 24px;
  color: white;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.map__container .map__controls button.map-zoom-fullscreen svg:last-child {
  display: none;
}
.map__container .map__controls button.map-zoom-fullscreen.active svg:first-child {
  display: none;
}
.map__container .map__controls button.map-zoom-fullscreen.active svg:last-child {
  display: block;
}

.map__container.fixed {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1000;
  background-color: #fff;
  height: 100dvh;
  width: 100%;
}
.map__container.fixed .map__leaflet {
  position: relative;
  z-index: 100;
}

.leaflet-control-attribution.leaflet-control {
  display: none;
}

.about-with-map {
  position: relative;
  z-index: 10;
}

.small-faq {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 100px;
  border-radius: 2px;
  background: rgba(221, 242, 246, 0.4);
  max-width: 1680px;
  width: 100%;
  margin-inline: auto;
}
.small-faq__container {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
@media screen and (max-width: 1640px) {
  .small-faq__container {
    width: calc(100% - 20px - 20px);
    margin-inline: 20px;
  }
}
.small-faq__container .title {
  margin-top: 56px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.small-faq__container .title h2 {
  color: var(--dark-100, #091315);
  /* H2 */
  font-family: var(--archivo);
  font-size: 40px;
  font-style: normal;
  font-weight: 500;
  line-height: 44px;
}
.small-faq__container__faqs {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 32px;
  margin-bottom: 48px;
}
.small-faq__container__faqs .faq {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  border-bottom: 1px solid rgba(9, 19, 21, 0.0784313725);
  padding: 11px 0;
}
.small-faq__container__faqs .faq.active .faq__heading .icon {
  background-color: #99D9E4;
}
.small-faq__container__faqs .faq.active .faq__heading .icon svg {
  rotate: 315deg;
}
.small-faq__container__faqs .faq:last-child {
  border-bottom: none;
}
.small-faq__container__faqs .faq__heading {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 16px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
@media (hover: hover) {
  .small-faq__container__faqs .faq__heading:hover {
    cursor: pointer;
  }
  .small-faq__container__faqs .faq__heading:hover .icon {
    background-color: var(--active);
  }
}
.small-faq__container__faqs .faq__heading:focus-visible .icon {
  background-color: var(--active);
}
.small-faq__container__faqs .faq__heading h3 {
  color: var(--dark-100, #091315);
  /* H3 */
  font-family: var(--archivo);
  font-size: 24px;
  font-style: normal;
  font-weight: 500;
  line-height: 32px;
  /* 133.333% */
  letter-spacing: -0.12px;
}
@media screen and (max-width: 768px) {
  .small-faq__container__faqs .faq__heading h3 {
    font-size: 20px;
    font-style: normal;
    font-weight: 500;
    line-height: 26px;
    /* 130% */
    letter-spacing: -0.1px;
    text-align: left;
    font-family: var(--rethink);
  }
}
.small-faq__container__faqs .faq__heading .icon {
  margin-left: auto;
  width: 58px;
  aspect-ratio: 1/1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 2px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-transition: 0.7s ease all;
  transition: 0.7s ease all;
  background-color: rgba(221, 242, 246, 0.4);
}
.small-faq__container__faqs .faq__heading .icon svg {
  width: 18px;
  aspect-ratio: 1/1;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  color: #091315;
  -webkit-transition: 0.7s ease-in-out all;
  transition: 0.7s ease-in-out all;
}
.small-faq__container__faqs .faq__body {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
}
@media screen and (max-width: 768px) {
  .small-faq__container__faqs .faq__body {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
.small-faq__container__faqs .faq__body__content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  grid-column: 1/2;
  gap: 32px;
  padding-top: 12px;
  padding-bottom: 23px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.small-faq__container__faqs .faq__body__content p {
  color: var(--dark-100, #091315);
  font-family: var(--rethink);
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
}
.small-faq__container__faqs .faq__body__content p br {
  line-height: 8px;
  height: 8px;
}
.small-faq__container__faqs .faq__body__content img {
  max-width: 100%;
  width: 100%;
  height: auto;
  -o-object-fit: scale-down;
  object-fit: scale-down;
}
.small-faq__container__faqs .faq__body__content img.scheme {
  width: auto;
  -o-object-position: left;
  object-position: left;
  height: auto;
}

.data-from-across-europe {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 56px;
}
@media screen and (max-width: 768px) {
  .data-from-across-europe {
    margin-top: 32px;
  }
}
.data-from-across-europe__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
}
@media screen and (max-width: 1640px) {
  .data-from-across-europe__container {
    width: calc(100% - 20px - 20px);
    margin-inline: 20px;
  }
}
.data-from-across-europe__container .description {
  color: var(--dark-52, rgba(9, 19, 21, 0.52));
  /* Body/Tech CAPS */
  font-family: var(--roboto);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px;
  /* 133.333% */
  letter-spacing: 0.12px;
  text-transform: uppercase;
}
.data-from-across-europe__container .values {
  margin-top: 16px;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: 16px;
  border-top: 1px solid rgba(9, 19, 21, 0.08);
}
@media screen and (max-width: 768px) {
  .data-from-across-europe__container .values {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr 1fr;
    padding-top: 16px;
  }
}
.data-from-across-europe__container .values .item {
  padding: 56px 24px;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 16px;
  border-left: 1px solid rgba(9, 19, 21, 0.08);
  color: var(--dark-100, #091315);
}
@media screen and (max-width: 1220px) {
  .data-from-across-europe__container .values .item {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
@media screen and (max-width: 768px) {
  .data-from-across-europe__container .values .item {
    padding: 0 0 16px 0;
    border: none;
    border-bottom: 1px solid rgba(9, 19, 21, 0.08);
  }
  .data-from-across-europe__container .values .item:last-child {
    border-bottom: 0;
  }
}
.data-from-across-europe__container .values .item:first-child {
  border-left: none;
  padding-left: 0;
}
.data-from-across-europe__container .values .item h3 {
  grid-column: 1/5;
  color: inherit;
  font-family: var(--archivo);
  font-size: 24px;
  font-style: normal;
  font-weight: 500;
  line-height: 32px;
  /* 133.333% */
  letter-spacing: -0.12px;
}
.data-from-across-europe__container .values .item p {
  grid-column: 1/4;
  color: inherit;
  color: var(--dark-100, #091315);
  /* Body/L */
  font-family: var(--rethink);
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
}

.why-the-registry-exists {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 90px;
}
@media screen and (max-width: 768px) {
  .why-the-registry-exists {
    margin-top: 80px;
  }
}
.why-the-registry-exists__container {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: 16px;
}
@media screen and (max-width: 1640px) {
  .why-the-registry-exists__container {
    width: calc(100% - 20px - 20px);
    margin-inline: 20px;
  }
}
@media screen and (max-width: 768px) {
  .why-the-registry-exists__container {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 32px;
  }
}
.why-the-registry-exists__container .image__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  grid-column: 1/7;
  position: relative;
  border-radius: 2px;
  overflow: hidden;
}
@media screen and (max-width: 768px) {
  .why-the-registry-exists__container .image__container {
    height: 353px;
  }
}
@media screen and (max-width: 393px) {
  .why-the-registry-exists__container .image__container {
    height: auto;
    aspect-ratio: 1/1;
    width: 100%;
  }
}
.why-the-registry-exists__container .image__container:after {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: -webkit-gradient(linear, left top, left bottom, from(rgba(9, 19, 21, 0)), to(rgba(9, 19, 21, 0.32)));
  background: linear-gradient(180deg, rgba(9, 19, 21, 0) 0%, rgba(9, 19, 21, 0.32) 100%);
}
.why-the-registry-exists__container .image__container h3 {
  margin: auto;
  color: var(--White, #FFF);
  text-align: center;
  /* H3 */
  font-family: var(--archivo);
  font-size: 24px;
  font-style: normal;
  font-weight: 500;
  line-height: 32px;
  /* 133.333% */
  letter-spacing: -0.12px;
  position: relative;
  z-index: 3;
}
@media screen and (max-width: 768px) {
  .why-the-registry-exists__container .image__container h3 {
    font-size: 20px;
    font-style: normal;
    font-weight: 500;
    line-height: 26px;
    /* 130% */
    letter-spacing: -0.1px;
  }
}
.why-the-registry-exists__container .image__container img {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  -o-object-fit: cover;
  object-fit: cover;
}
.why-the-registry-exists__container .text__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  grid-column: 8/12;
  padding: 100px 0;
}
@media screen and (max-width: 768px) {
  .why-the-registry-exists__container .text__container {
    padding: 0;
  }
}
.why-the-registry-exists__container .text__container .title__container {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 24px;
}
@media screen and (max-width: 768px) {
  .why-the-registry-exists__container .text__container .title__container {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
.why-the-registry-exists__container .text__container .title__container h2 {
  color: var(--dark-100, #091315);
  /* H2 */
  font-family: var(--archivo);
  font-size: 40px;
  font-style: normal;
  font-weight: 500;
  line-height: 44px;
  grid-column: 1/4;
}
@media screen and (max-width: 768px) {
  .why-the-registry-exists__container .text__container .title__container h2 {
    font-size: 36px;
    font-style: normal;
    font-weight: 500;
    line-height: 40px;
  }
}
.why-the-registry-exists__container .text__container .title__container p {
  grid-column: 1/5;
  color: var(--dark-100, #091315);
  /* Body/L */
  font-family: var(--rethink);
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
}
@media screen and (max-width: 768px) {
  .why-the-registry-exists__container .text__container .title__container p {
    font-size: 18px;
    font-style: normal;
    font-weight: 400;
    line-height: 26px;
  }
}
.why-the-registry-exists__container .text__container .proposes {
  margin-top: 137px;
  width: 100%;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 32px 16px;
}
@media screen and (max-width: 1220px) {
  .why-the-registry-exists__container .text__container .proposes {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
@media screen and (max-width: 768px) {
  .why-the-registry-exists__container .text__container .proposes {
    margin-top: 56px;
    gap: 32px;
  }
}
.why-the-registry-exists__container .text__container .proposes .propose {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 12px;
  grid-column: 3 span;
}
.why-the-registry-exists__container .text__container .proposes .propose .number {
  color: var(--dark-52, rgba(9, 19, 21, 0.52));
  font-family: var(--roboto);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px;
  /* 133.333% */
  letter-spacing: 0.12px;
  text-transform: uppercase;
}
.why-the-registry-exists__container .text__container .proposes .propose h4 {
  color: var(--dark-100, #091315);
  /* H4 */
  font-family: var(--rethink);
  font-size: 20px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  /* 130% */
  letter-spacing: -0.1px;
}

.the-participating-countries-include {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 56px;
  margin-bottom: 32px;
}
.the-participating-countries-include__container {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
@media screen and (max-width: 1640px) {
  .the-participating-countries-include__container {
    width: calc(100% - 20px - 20px);
    margin-inline: 20px;
  }
}
.the-participating-countries-include__container .container__for-mobile {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}
@media screen and (max-width: 768px) {
  .the-participating-countries-include__container .container__for-mobile {
    display: grid;
    grid-template-columns: 54fr 220fr;
    gap: 80px;
    border-top: 1px solid rgba(9, 19, 21, 0.08);
    margin-top: 16px;
    padding-top: 16px;
  }
}
.the-participating-countries-include__container .container__for-mobile .col__for-btns {
  display: none;
}
@media screen and (max-width: 768px) {
  .the-participating-countries-include__container .container__for-mobile .col__for-btns {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 16px;
    height: -webkit-fit-content;
    height: -moz-fit-content;
    height: fit-content;
    position: sticky;
    top: 164px;
  }
}
.the-participating-countries-include__container .container__for-mobile .col__for-btns button {
  color: var(--dark-32, rgba(9, 19, 21, 0.32));
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.the-participating-countries-include__container .container__for-mobile .col__for-btns button.active {
  color: #091315;
}
.the-participating-countries-include__container .container__for-mobile .col__for-btns h3 {
  color: inherit;
  -webkit-transition: inherit;
  transition: inherit;
  width: 100%;
  text-align: left;
  /* H3 */
  font-family: var(--archivo);
  font-size: 24px;
  font-style: normal;
  font-weight: 500;
  line-height: 32px;
  /* 133.333% */
  letter-spacing: -0.12px;
}
.the-participating-countries-include__container h4 {
  color: var(--dark-52, rgba(9, 19, 21, 0.52));
  font-family: var(--roboto);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px;
  /* 133.333% */
  letter-spacing: 0.12px;
  text-transform: uppercase;
}
.the-participating-countries-include__container .grid {
  border-top: 1px solid rgba(9, 19, 21, 0.08);
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 16px;
  padding-top: 16px;
  margin-top: 16px;
}
@media screen and (max-width: 768px) {
  .the-participating-countries-include__container .grid {
    grid-template-columns: 1fr;
    border-top: 0;
    margin-top: 0;
    padding-top: 0;
  }
}
.the-participating-countries-include__container .grid .col {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 16px;
  position: relative;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
}
@media screen and (max-width: 768px) {
  .the-participating-countries-include__container .grid .col {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    display: none;
  }
  .the-participating-countries-include__container .grid .col h3 {
    display: none;
    gap: 0;
  }
  .the-participating-countries-include__container .grid .col:first-child {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
}
.the-participating-countries-include__container .grid .col h3 {
  position: sticky;
  top: 194px;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
}
.the-participating-countries-include__container .grid .col ul {
  grid-column: 2/4;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 8px;
  margin: 0;
  padding: 0;
  list-style-type: none;
}
.the-participating-countries-include__container .grid .col ul li {
  width: 100%;
  color: var(--dark-100, #091315);
  /* Body/M */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
  /* 162.5% */
  letter-spacing: 0.16px;
  padding-bottom: 16px;
  border-bottom: 1px solid rgba(9, 19, 21, 0.0784313725);
}

.participants-annual-report {
  width: 100%;
  max-width: 1600px;
  margin-inline: auto;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  margin-top: 32px;
  position: relative;
}
@media screen and (max-width: 1640px) {
  .participants-annual-report {
    width: calc(100% - 20px - 20px);
    margin-inline: 20px;
  }
}
@media screen and (max-width: 1024px) {
  .participants-annual-report {
    grid-template-columns: 1fr 1fr;
  }
}
@media screen and (max-width: 768px) {
  .participants-annual-report {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
.participants-annual-report__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin-left: 18px;
  margin-right: -18px;
}
@media screen and (max-width: 768px) {
  .participants-annual-report__container {
    margin-right: 0px;
  }
}
.participants-annual-report__container > .icon {
  top: 8px;
  left: 0;
  position: absolute;
}
.participants-annual-report__container .text p {
  color: var(--dark-52, rgba(9, 19, 21, 0.52));
  /* Body/L */
  font-family: var(--rethink);
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 26px;
}
.participants-annual-report__container .text p b {
  color: #091315;
  font-weight: 600;
}
.participants-annual-report__container .text p a {
  text-decoration: underline;
}
@media (hover: hover) {
  .participants-annual-report__container .text p a:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.participants-annual-report__container .text p a:focus-visible {
  color: var(--active);
}
.participants-annual-report .download-with-arrow {
  margin-top: 32px;
  margin-bottom: 100px;
  grid-column: 1/2;
}
@media screen and (max-width: 768px) {
  .participants-annual-report .download-with-arrow {
    margin-bottom: 80px;
  }
}

/* modals */
.modal {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 100dvh;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 900;
  overflow: auto;
  overflow-x: hidden;
  -ms-scroll-chaining: none;
  overscroll-behavior: contain;
}

.mobile-menu {
  display: none;
  background-color: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(2px);
  -webkit-backdrop-filter: blur(2px);
  -webkit-transition: 0.6s ease-out height;
  transition: 0.6s ease-out height;
}
@media screen and (max-width: 1122px) {
  .mobile-menu {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
}
@media screen and (max-width: 768px) {
  .mobile-menu {
    background-color: #fff;
  }
}
.mobile-menu__content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-left: auto;
  max-width: 393px;
  width: 100%;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  background-color: #fff;
  position: relative;
}
@media screen and (max-width: 768px) {
  .mobile-menu__content {
    max-width: none;
  }
}
.mobile-menu__content .download {
  margin-inline: 16px;
  width: calc(100% - 16px - 16px);
  border-radius: 2px;
  background: var(--blue-green-300100, #99D9E4);
  padding: 16px 32px;
  position: relative;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
@media (hover: hover) {
  .mobile-menu__content .download:hover {
    cursor: pointer;
    background-color: var(--active);
  }
  .mobile-menu__content .download:hover .icon {
    top: 4px;
    right: 4px;
  }
}
.mobile-menu__content .download:focus-visible {
  background-color: var(--active);
}
.mobile-menu__content .download:focus-visible .icon {
  top: 4px;
  right: 4px;
}
.mobile-menu__content .download .text {
  width: 100%;
  text-align: center;
  color: var(--dark-100, #091315);
  /* Body/Body M – Meduim */
  font-family: var(--rethink);
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  /* 162.5% */
}
.mobile-menu__content .download .icon {
  position: absolute;
  top: 8px;
  right: 8px;
  width: 12px;
  height: 12px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-transition: 0.2s ease all;
  transition: 0.2s ease all;
}
.mobile-menu__content .block {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  background-color: #fff;
  padding-bottom: 16px;
}
.mobile-menu__content .block nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 16px;
}
.mobile-menu__content .block nav ul {
  padding: 0;
  list-style-type: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.mobile-menu__content .block nav ul li {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  position: relative;
}
.mobile-menu__content .block nav ul li:after {
  content: "";
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 1px;
  left: 0;
  background: var(--dark-8, rgba(9, 19, 21, 0.08));
}
.mobile-menu__content .block nav ul li button {
  padding: 16px;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 20px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}
@media (hover: hover) {
  .mobile-menu__content .block nav ul li button:hover {
    cursor: pointer;
  }
  .mobile-menu__content .block nav ul li button:hover .text {
    color: var(--active);
  }
  .mobile-menu__content .block nav ul li button:hover svg {
    color: var(--active);
  }
}
.mobile-menu__content .block nav ul li button:focus-visible .text {
  color: var(--active);
}
.mobile-menu__content .block nav ul li button:focus-visible svg {
  color: var(--active);
}
.mobile-menu__content .block nav ul li a {
  padding: 16px;
  width: 100%;
}
@media (hover: hover) {
  .mobile-menu__content .block nav ul li a:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.mobile-menu__content .block nav ul li a:focus-visible {
  color: var(--active);
}
.mobile-menu__content .block nav ul li .text {
  color: var(--dark-100, #091315);
  /* H4 */
  font-family: var(--rethink);
  font-size: 20px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  /* 130% */
  letter-spacing: -0.1px;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.mobile-menu__content .block .download {
  margin-top: auto;
}
.mobile-menu__content .link-block {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  background-color: #fff;
  padding: 16px 0;
  position: absolute;
  width: 100%;
  top: 0;
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
  -webkit-transition: 0.6s ease all;
  transition: 0.6s ease all;
}
.mobile-menu__content .link-block .title {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
}
.mobile-menu__content .link-block .title h3 {
  padding: 0 16px;
  color: var(--dark-52, rgba(9, 19, 21, 0.52));
  font-family: var(--roboto);
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 22px;
  /* 183.333% */
  letter-spacing: 0.12px;
  text-transform: uppercase;
}
.mobile-menu__content .link-block .line {
  margin: 16px 0;
  width: 100%;
  height: 1px;
  background: var(--dark-8, rgba(9, 19, 21, 0.08));
}
.mobile-menu__content .link-block nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 44px;
}
.mobile-menu__content .link-block nav ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  list-style-type: none;
  gap: 8px;
}
.mobile-menu__content .link-block nav ul li {
  width: 100%;
}
.mobile-menu__content .link-block nav ul li a {
  color: var(--dark-100, #091315);
  /* H4 */
  font-family: var(--rethink);
  font-size: 20px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  /* 130% */
  letter-spacing: -0.1px;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
@media (hover: hover) {
  .mobile-menu__content .link-block nav ul li a:hover {
    cursor: pointer;
    color: var(--active);
  }
}
.mobile-menu__content .link-block nav ul li a:focus-visible {
  color: var(--active);
}
.mobile-menu__content .link-block .report-content {
  border-radius: 2px;
  background: var(--blue-green-100100, #DDF2F6);
  width: calc(100% - 16px - 16px);
  height: 434px;
  margin-inline: 16px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin-top: auto;
}
.mobile-menu__content .link-block .report-content img {
  max-width: 224px;
  max-height: 285px;
  width: 100%;
  height: auto;
  -o-object-fit: scale-down;
  object-fit: scale-down;
}
.mobile-menu__content .link-block .post {
  max-width: 361px;
  width: calc(100% - 16px - 16px);
  margin-inline: auto;
  margin-top: auto;
  color: var(--dark-100, #091315);
}
@media (hover: hover) {
  .mobile-menu__content .link-block .post:hover {
    cursor: pointer;
  }
  .mobile-menu__content .link-block .post:hover .img-container img {
    scale: 1.1;
  }
  .mobile-menu__content .link-block .post:hover h3 {
    color: var(--active);
  }
}
.mobile-menu__content .link-block .post:focus-visible .img-container img {
  scale: 1.1;
}
.mobile-menu__content .link-block .post:focus-visible h3 {
  color: var(--active);
}
.mobile-menu__content .link-block .post .img-container {
  position: relative;
  aspect-ratio: 388/280;
  overflow: hidden;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  border-radius: 2px;
}
.mobile-menu__content .link-block .post .img-container img {
  width: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  height: 100%;
  -webkit-transition: 0.8s ease-out all;
  transition: 0.8s ease-out all;
}
.mobile-menu__content .link-block .post h3 {
  color: inherit;
  margin-top: 16px;
  font-family: var(--rethink);
  font-size: 20px;
  font-style: normal;
  font-weight: 500;
  line-height: 26px;
  /* 130% */
  letter-spacing: -0.1px;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.mobile-menu__content .link-block .download {
  margin-top: 16px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
